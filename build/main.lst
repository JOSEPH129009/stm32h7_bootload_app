ARM GAS  /tmp/ccVEBVup.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"main.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.SystemClock_Config,"ax",%progbits
  17              		.align	1
  18              		.p2align 2,,3
  19              		.global	SystemClock_Config
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	SystemClock_Config:
  27              	.LFB145:
  28              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "tim.h"
  22:Core/Src/main.c **** #include "usart.h"
  23:Core/Src/main.c **** #include "gpio.h"
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  26:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  27:Core/Src/main.c **** #include "bootloader.h"
  28:Core/Src/main.c **** /* USER CODE END Includes */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
ARM GAS  /tmp/ccVEBVup.s 			page 2


  31:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* USER CODE END PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PD */
  37:Core/Src/main.c **** /* USER CODE END PD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PM */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE BEGIN PV */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE END PV */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  51:Core/Src/main.c **** void SystemClock_Config(void);
  52:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* USER CODE END PFP */
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  57:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* USER CODE END 0 */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /**
  62:Core/Src/main.c ****   * @brief  The application entry point.
  63:Core/Src/main.c ****   * @retval int
  64:Core/Src/main.c ****   */
  65:Core/Src/main.c **** int main(void)
  66:Core/Src/main.c **** {
  67:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  68:Core/Src/main.c **** 
  69:Core/Src/main.c ****   /* USER CODE END 1 */
  70:Core/Src/main.c **** 
  71:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  72:Core/Src/main.c **** 
  73:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  74:Core/Src/main.c ****   HAL_Init();
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  77:Core/Src/main.c **** 
  78:Core/Src/main.c ****   /* USER CODE END Init */
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* Configure the system clock */
  81:Core/Src/main.c ****   SystemClock_Config();
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* USER CODE END SysInit */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* Initialize all configured peripherals */
ARM GAS  /tmp/ccVEBVup.s 			page 3


  88:Core/Src/main.c ****   MX_GPIO_Init();
  89:Core/Src/main.c ****   MX_USART1_UART_Init();
  90:Core/Src/main.c ****   MX_TIM2_Init();
  91:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  92:Core/Src/main.c ****   HAL_TIM_Base_Start(&htim2);
  93:Core/Src/main.c ****   // HAL_UART_Receive_IT(&huart1,(uint8_t*)&ch, 1);
  94:Core/Src/main.c ****   bootloader_main();
  95:Core/Src/main.c ****   /* USER CODE END 2 */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* Infinite loop */
  98:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
  99:Core/Src/main.c ****   while (1)
 100:Core/Src/main.c ****   {
 101:Core/Src/main.c ****     /* USER CODE END WHILE */
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****   }
 106:Core/Src/main.c ****   /* USER CODE END 3 */
 107:Core/Src/main.c **** }
 108:Core/Src/main.c **** 
 109:Core/Src/main.c **** /**
 110:Core/Src/main.c ****   * @brief System Clock Configuration
 111:Core/Src/main.c ****   * @retval None
 112:Core/Src/main.c ****   */
 113:Core/Src/main.c **** void SystemClock_Config(void)
 114:Core/Src/main.c **** {
  29              		.loc 1 114 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 112
  32              		@ frame_needed = 0, uses_anonymous_args = 0
 115:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  33              		.loc 1 115 3 view .LVU1
 114:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  34              		.loc 1 114 1 is_stmt 0 view .LVU2
  35 0000 30B5     		push	{r4, r5, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 12
  38              		.cfi_offset 4, -12
  39              		.cfi_offset 5, -8
  40              		.cfi_offset 14, -4
  41 0002 9DB0     		sub	sp, sp, #116
  42              	.LCFI1:
  43              		.cfi_def_cfa_offset 128
  44              		.loc 1 115 22 view .LVU3
  45 0004 4C22     		movs	r2, #76
  46 0006 0021     		movs	r1, #0
  47 0008 09A8     		add	r0, sp, #36
  48 000a FFF7FEFF 		bl	memset
  49              	.LVL0:
 116:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  50              		.loc 1 116 3 is_stmt 1 view .LVU4
  51              		.loc 1 116 22 is_stmt 0 view .LVU5
  52 000e 2022     		movs	r2, #32
  53 0010 0021     		movs	r1, #0
  54 0012 01A8     		add	r0, sp, #4
  55 0014 FFF7FEFF 		bl	memset
ARM GAS  /tmp/ccVEBVup.s 			page 4


  56              	.LVL1:
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****   /** Supply configuration update enable
 119:Core/Src/main.c ****   */
 120:Core/Src/main.c ****   HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
  57              		.loc 1 120 3 is_stmt 1 view .LVU6
  58 0018 0220     		movs	r0, #2
  59 001a FFF7FEFF 		bl	HAL_PWREx_ConfigSupply
  60              	.LVL2:
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 123:Core/Src/main.c ****   */
 124:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
  61              		.loc 1 124 3 view .LVU7
  62              	.LBB13:
  63              		.loc 1 124 3 view .LVU8
  64 001e 1E4B     		ldr	r3, .L11
  65 0020 0021     		movs	r1, #0
  66 0022 1E4A     		ldr	r2, .L11+4
  67 0024 0091     		str	r1, [sp]
  68              		.loc 1 124 3 view .LVU9
  69              		.loc 1 124 3 view .LVU10
  70 0026 D96A     		ldr	r1, [r3, #44]
  71 0028 21F00101 		bic	r1, r1, #1
  72 002c D962     		str	r1, [r3, #44]
  73              		.loc 1 124 3 view .LVU11
  74 002e DB6A     		ldr	r3, [r3, #44]
  75 0030 03F00103 		and	r3, r3, #1
  76 0034 0093     		str	r3, [sp]
  77              		.loc 1 124 3 view .LVU12
  78 0036 9369     		ldr	r3, [r2, #24]
  79 0038 23F44043 		bic	r3, r3, #49152
  80 003c 43F48043 		orr	r3, r3, #16384
  81 0040 9361     		str	r3, [r2, #24]
  82              		.loc 1 124 3 view .LVU13
  83 0042 9369     		ldr	r3, [r2, #24]
  84 0044 03F44043 		and	r3, r3, #49152
  85 0048 0093     		str	r3, [sp]
  86              		.loc 1 124 3 view .LVU14
  87 004a 009B     		ldr	r3, [sp]
  88              	.LBE13:
  89              		.loc 1 124 3 view .LVU15
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****   while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
  90              		.loc 1 126 3 view .LVU16
  91              	.L2:
  92              		.loc 1 126 48 discriminator 1 view .LVU17
  93              		.loc 1 126 8 discriminator 1 view .LVU18
  94              		.loc 1 126 10 is_stmt 0 discriminator 1 view .LVU19
  95 004c 9369     		ldr	r3, [r2, #24]
  96              		.loc 1 126 8 discriminator 1 view .LVU20
  97 004e 9B04     		lsls	r3, r3, #18
  98 0050 FCD5     		bpl	.L2
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 129:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 130:Core/Src/main.c ****   */
ARM GAS  /tmp/ccVEBVup.s 			page 5


 131:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
  99              		.loc 1 131 3 is_stmt 1 view .LVU21
 100              		.loc 1 131 36 is_stmt 0 view .LVU22
 101 0052 0223     		movs	r3, #2
 132:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_DIV1;
 102              		.loc 1 132 30 view .LVU23
 103 0054 0125     		movs	r5, #1
 133:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 104              		.loc 1 133 41 view .LVU24
 105 0056 4024     		movs	r4, #64
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 135:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 106              		.loc 1 135 7 view .LVU25
 107 0058 09A8     		add	r0, sp, #36
 131:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_DIV1;
 108              		.loc 1 131 36 view .LVU26
 109 005a 0993     		str	r3, [sp, #36]
 132:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 110              		.loc 1 132 3 is_stmt 1 view .LVU27
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 111              		.loc 1 134 34 is_stmt 0 view .LVU28
 112 005c 0023     		movs	r3, #0
 133:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 113              		.loc 1 133 41 view .LVU29
 114 005e CDE90C54 		strd	r5, r4, [sp, #48]
 134:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 115              		.loc 1 134 3 is_stmt 1 view .LVU30
 134:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 116              		.loc 1 134 34 is_stmt 0 view .LVU31
 117 0062 1293     		str	r3, [sp, #72]
 118              		.loc 1 135 3 is_stmt 1 view .LVU32
 119              		.loc 1 135 7 is_stmt 0 view .LVU33
 120 0064 FFF7FEFF 		bl	HAL_RCC_OscConfig
 121              	.LVL3:
 122              		.loc 1 135 6 view .LVU34
 123 0068 0346     		mov	r3, r0
 124 006a 08B1     		cbz	r0, .L3
 136:Core/Src/main.c ****   {
 137:Core/Src/main.c ****     Error_Handler();
 125              		.loc 1 137 5 is_stmt 1 view .LVU35
 126              	.LBB14:
 127              	.LBI14:
 138:Core/Src/main.c ****   }
 139:Core/Src/main.c **** 
 140:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 141:Core/Src/main.c ****   */
 142:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 143:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
 144:Core/Src/main.c ****                               |RCC_CLOCKTYPE_D3PCLK1|RCC_CLOCKTYPE_D1PCLK1;
 145:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 146:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 147:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV1;
 148:Core/Src/main.c ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV1;
 149:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 150:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 151:Core/Src/main.c ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV1;
 152:Core/Src/main.c **** 
ARM GAS  /tmp/ccVEBVup.s 			page 6


 153:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 154:Core/Src/main.c ****   {
 155:Core/Src/main.c ****     Error_Handler();
 156:Core/Src/main.c ****   }
 157:Core/Src/main.c **** }
 158:Core/Src/main.c **** 
 159:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 160:Core/Src/main.c **** 
 161:Core/Src/main.c **** /* USER CODE END 4 */
 162:Core/Src/main.c **** 
 163:Core/Src/main.c **** /**
 164:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 165:Core/Src/main.c ****   * @retval None
 166:Core/Src/main.c ****   */
 167:Core/Src/main.c **** void Error_Handler(void)
 128              		.loc 1 167 6 view .LVU36
 129              	.LBE14:
 168:Core/Src/main.c **** {
 169:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 170:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 171:Core/Src/main.c ****   __disable_irq();
 130              		.loc 1 171 3 view .LVU37
 131              	.LBB17:
 132              	.LBB15:
 133              	.LBI15:
 134              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
ARM GAS  /tmp/ccVEBVup.s 			page 7


  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
ARM GAS  /tmp/ccVEBVup.s 			page 8


  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
ARM GAS  /tmp/ccVEBVup.s 			page 9


 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/ccVEBVup.s 			page 10


 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 135              		.loc 2 207 27 view .LVU38
 136              	.LBB16:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 137              		.loc 2 209 3 view .LVU39
 138              		.syntax unified
 139              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 140 006c 72B6     		cpsid i
 141              	@ 0 "" 2
 142              		.thumb
 143              		.syntax unified
 144              	.L4:
 145              	.LBE16:
 146              	.LBE15:
 147              	.LBE17:
 172:Core/Src/main.c ****   while (1)
 148              		.loc 1 172 3 view .LVU40
 173:Core/Src/main.c ****   {
 174:Core/Src/main.c ****   }
 149              		.loc 1 174 3 view .LVU41
 172:Core/Src/main.c ****   while (1)
 150              		.loc 1 172 9 view .LVU42
 172:Core/Src/main.c ****   while (1)
 151              		.loc 1 172 3 view .LVU43
 152              		.loc 1 174 3 view .LVU44
 172:Core/Src/main.c ****   while (1)
 153              		.loc 1 172 9 view .LVU45
 154 006e FEE7     		b	.L4
 155              	.L3:
 142:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
 156              		.loc 1 142 3 view .LVU46
 142:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
 157              		.loc 1 142 31 is_stmt 0 view .LVU47
 158 0070 3F22     		movs	r2, #63
 153:Core/Src/main.c ****   {
 159              		.loc 1 153 7 view .LVU48
 160 0072 2946     		mov	r1, r5
 161 0074 01A8     		add	r0, sp, #4
 142:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
 162              		.loc 1 142 31 view .LVU49
 163 0076 CDE90123 		strd	r2, r3, [sp, #4]
 145:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 164              		.loc 1 145 3 is_stmt 1 view .LVU50
 146:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV1;
 165              		.loc 1 146 3 view .LVU51
 150:Core/Src/main.c ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV1;
 166              		.loc 1 150 36 is_stmt 0 view .LVU52
 167 007a 4FF48062 		mov	r2, #1024
 147:Core/Src/main.c ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV1;
 168              		.loc 1 147 35 view .LVU53
 169 007e CDE90333 		strd	r3, r3, [sp, #12]
 148:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
ARM GAS  /tmp/ccVEBVup.s 			page 11


 170              		.loc 1 148 3 is_stmt 1 view .LVU54
 149:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 171              		.loc 1 149 36 is_stmt 0 view .LVU55
 172 0082 CDE90534 		strd	r3, r4, [sp, #20]
 150:Core/Src/main.c ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV1;
 173              		.loc 1 150 3 is_stmt 1 view .LVU56
 151:Core/Src/main.c **** 
 174              		.loc 1 151 36 is_stmt 0 view .LVU57
 175 0086 CDE90723 		strd	r2, r3, [sp, #28]
 153:Core/Src/main.c ****   {
 176              		.loc 1 153 3 is_stmt 1 view .LVU58
 153:Core/Src/main.c ****   {
 177              		.loc 1 153 7 is_stmt 0 view .LVU59
 178 008a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 179              	.LVL4:
 153:Core/Src/main.c ****   {
 180              		.loc 1 153 6 view .LVU60
 181 008e 08B1     		cbz	r0, .L1
 155:Core/Src/main.c ****   }
 182              		.loc 1 155 5 is_stmt 1 view .LVU61
 183              	.LBB18:
 184              	.LBI18:
 167:Core/Src/main.c **** {
 185              		.loc 1 167 6 view .LVU62
 186              	.LBE18:
 171:Core/Src/main.c ****   while (1)
 187              		.loc 1 171 3 view .LVU63
 188              	.LBB21:
 189              	.LBB19:
 190              	.LBI19:
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 191              		.loc 2 207 27 view .LVU64
 192              	.LBB20:
 193              		.loc 2 209 3 view .LVU65
 194              		.syntax unified
 195              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 196 0090 72B6     		cpsid i
 197              	@ 0 "" 2
 198              		.thumb
 199              		.syntax unified
 200              	.L6:
 201              	.LBE20:
 202              	.LBE19:
 203              	.LBE21:
 172:Core/Src/main.c ****   {
 204              		.loc 1 172 3 view .LVU66
 205              		.loc 1 174 3 view .LVU67
 172:Core/Src/main.c ****   {
 206              		.loc 1 172 9 view .LVU68
 172:Core/Src/main.c ****   {
 207              		.loc 1 172 3 view .LVU69
 208              		.loc 1 174 3 view .LVU70
 172:Core/Src/main.c ****   {
 209              		.loc 1 172 9 view .LVU71
 210 0092 FEE7     		b	.L6
 211              	.L1:
 157:Core/Src/main.c **** 
ARM GAS  /tmp/ccVEBVup.s 			page 12


 212              		.loc 1 157 1 is_stmt 0 view .LVU72
 213 0094 1DB0     		add	sp, sp, #116
 214              	.LCFI2:
 215              		.cfi_def_cfa_offset 12
 216              		@ sp needed
 217 0096 30BD     		pop	{r4, r5, pc}
 218              	.L12:
 219              		.align	2
 220              	.L11:
 221 0098 00040058 		.word	1476396032
 222 009c 00480258 		.word	1476544512
 223              		.cfi_endproc
 224              	.LFE145:
 226              		.section	.text.startup.main,"ax",%progbits
 227              		.align	1
 228              		.p2align 2,,3
 229              		.global	main
 230              		.syntax unified
 231              		.thumb
 232              		.thumb_func
 233              		.fpu fpv5-d16
 235              	main:
 236              	.LFB144:
  66:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 237              		.loc 1 66 1 is_stmt 1 view -0
 238              		.cfi_startproc
 239              		@ Volatile: function does not return.
 240              		@ args = 0, pretend = 0, frame = 0
 241              		@ frame_needed = 0, uses_anonymous_args = 0
  74:Core/Src/main.c **** 
 242              		.loc 1 74 3 view .LVU74
  66:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 243              		.loc 1 66 1 is_stmt 0 view .LVU75
 244 0000 08B5     		push	{r3, lr}
 245              	.LCFI3:
 246              		.cfi_def_cfa_offset 8
 247              		.cfi_offset 3, -8
 248              		.cfi_offset 14, -4
  74:Core/Src/main.c **** 
 249              		.loc 1 74 3 view .LVU76
 250 0002 FFF7FEFF 		bl	HAL_Init
 251              	.LVL5:
  81:Core/Src/main.c **** 
 252              		.loc 1 81 3 is_stmt 1 view .LVU77
 253 0006 FFF7FEFF 		bl	SystemClock_Config
 254              	.LVL6:
  88:Core/Src/main.c ****   MX_USART1_UART_Init();
 255              		.loc 1 88 3 view .LVU78
 256 000a FFF7FEFF 		bl	MX_GPIO_Init
 257              	.LVL7:
  89:Core/Src/main.c ****   MX_TIM2_Init();
 258              		.loc 1 89 3 view .LVU79
 259 000e FFF7FEFF 		bl	MX_USART1_UART_Init
 260              	.LVL8:
  90:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 261              		.loc 1 90 3 view .LVU80
 262 0012 FFF7FEFF 		bl	MX_TIM2_Init
ARM GAS  /tmp/ccVEBVup.s 			page 13


 263              	.LVL9:
  92:Core/Src/main.c ****   // HAL_UART_Receive_IT(&huart1,(uint8_t*)&ch, 1);
 264              		.loc 1 92 3 view .LVU81
 265 0016 0348     		ldr	r0, .L16
 266 0018 FFF7FEFF 		bl	HAL_TIM_Base_Start
 267              	.LVL10:
  94:Core/Src/main.c ****   /* USER CODE END 2 */
 268              		.loc 1 94 3 view .LVU82
 269 001c FFF7FEFF 		bl	bootloader_main
 270              	.LVL11:
 271              	.L14:
  99:Core/Src/main.c ****   {
 272              		.loc 1 99 3 discriminator 1 view .LVU83
 105:Core/Src/main.c ****   /* USER CODE END 3 */
 273              		.loc 1 105 3 discriminator 1 view .LVU84
  99:Core/Src/main.c ****   {
 274              		.loc 1 99 9 discriminator 1 view .LVU85
  99:Core/Src/main.c ****   {
 275              		.loc 1 99 3 discriminator 1 view .LVU86
 105:Core/Src/main.c ****   /* USER CODE END 3 */
 276              		.loc 1 105 3 discriminator 1 view .LVU87
  99:Core/Src/main.c ****   {
 277              		.loc 1 99 9 discriminator 1 view .LVU88
 278 0020 FEE7     		b	.L14
 279              	.L17:
 280 0022 00BF     		.align	2
 281              	.L16:
 282 0024 00000000 		.word	htim2
 283              		.cfi_endproc
 284              	.LFE144:
 286              		.section	.text.Error_Handler,"ax",%progbits
 287              		.align	1
 288              		.p2align 2,,3
 289              		.global	Error_Handler
 290              		.syntax unified
 291              		.thumb
 292              		.thumb_func
 293              		.fpu fpv5-d16
 295              	Error_Handler:
 296              	.LFB146:
 168:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 297              		.loc 1 168 1 view -0
 298              		.cfi_startproc
 299              		@ Volatile: function does not return.
 300              		@ args = 0, pretend = 0, frame = 0
 301              		@ frame_needed = 0, uses_anonymous_args = 0
 302              		@ link register save eliminated.
 171:Core/Src/main.c ****   while (1)
 303              		.loc 1 171 3 view .LVU90
 304              	.LBB22:
 305              	.LBI22:
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 306              		.loc 2 207 27 view .LVU91
 307              	.LBB23:
 308              		.loc 2 209 3 view .LVU92
 309              		.syntax unified
 310              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  /tmp/ccVEBVup.s 			page 14


 311 0000 72B6     		cpsid i
 312              	@ 0 "" 2
 313              		.thumb
 314              		.syntax unified
 315              	.L19:
 316              	.LBE23:
 317              	.LBE22:
 172:Core/Src/main.c ****   {
 318              		.loc 1 172 3 discriminator 1 view .LVU93
 319              		.loc 1 174 3 discriminator 1 view .LVU94
 172:Core/Src/main.c ****   {
 320              		.loc 1 172 9 discriminator 1 view .LVU95
 172:Core/Src/main.c ****   {
 321              		.loc 1 172 3 discriminator 1 view .LVU96
 322              		.loc 1 174 3 discriminator 1 view .LVU97
 172:Core/Src/main.c ****   {
 323              		.loc 1 172 9 discriminator 1 view .LVU98
 324 0002 FEE7     		b	.L19
 325              		.cfi_endproc
 326              	.LFE146:
 328              		.text
 329              	.Letext0:
 330              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 331              		.file 4 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 332              		.file 5 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 333              		.file 6 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc.h"
 334              		.file 7 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
 335              		.file 8 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_tim.h"
 336              		.file 9 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_pwr_ex.h"
 337              		.file 10 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
 338              		.file 11 "Core/Inc/gpio.h"
 339              		.file 12 "Core/Inc/usart.h"
 340              		.file 13 "Core/Inc/tim.h"
 341              		.file 14 "Core/Inc/bootloader.h"
 342              		.file 15 "<built-in>"
ARM GAS  /tmp/ccVEBVup.s 			page 15


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccVEBVup.s:17     .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccVEBVup.s:26     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccVEBVup.s:221    .text.SystemClock_Config:0000000000000098 $d
     /tmp/ccVEBVup.s:227    .text.startup.main:0000000000000000 $t
     /tmp/ccVEBVup.s:235    .text.startup.main:0000000000000000 main
     /tmp/ccVEBVup.s:282    .text.startup.main:0000000000000024 $d
     /tmp/ccVEBVup.s:287    .text.Error_Handler:0000000000000000 $t
     /tmp/ccVEBVup.s:295    .text.Error_Handler:0000000000000000 Error_Handler

UNDEFINED SYMBOLS
memset
HAL_PWREx_ConfigSupply
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_USART1_UART_Init
MX_TIM2_Init
HAL_TIM_Base_Start
bootloader_main
htim2
