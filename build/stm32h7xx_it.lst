ARM GAS  /tmp/ccDxXG5m.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32h7xx_it.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.NMI_Handler,"ax",%progbits
  17              		.align	1
  18              		.p2align 2,,3
  19              		.global	NMI_Handler
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	NMI_Handler:
  27              	.LFB144:
  28              		.file 1 "Core/Src/stm32h7xx_it.c"
   1:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32h7xx_it.c **** /**
   3:Core/Src/stm32h7xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32h7xx_it.c ****   * @file    stm32h7xx_it.c
   5:Core/Src/stm32h7xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32h7xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32h7xx_it.c ****   * @attention
   8:Core/Src/stm32h7xx_it.c ****   *
   9:Core/Src/stm32h7xx_it.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/stm32h7xx_it.c ****   * All rights reserved.
  11:Core/Src/stm32h7xx_it.c ****   *
  12:Core/Src/stm32h7xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/stm32h7xx_it.c ****   * in the root directory of this software component.
  14:Core/Src/stm32h7xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/stm32h7xx_it.c ****   *
  16:Core/Src/stm32h7xx_it.c ****   ******************************************************************************
  17:Core/Src/stm32h7xx_it.c ****   */
  18:Core/Src/stm32h7xx_it.c **** /* USER CODE END Header */
  19:Core/Src/stm32h7xx_it.c **** 
  20:Core/Src/stm32h7xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/stm32h7xx_it.c **** #include "main.h"
  22:Core/Src/stm32h7xx_it.c **** #include "stm32h7xx_it.h"
  23:Core/Src/stm32h7xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/stm32h7xx_it.c **** /* USER CODE END Includes */
  26:Core/Src/stm32h7xx_it.c **** 
  27:Core/Src/stm32h7xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN TD */
  29:Core/Src/stm32h7xx_it.c **** 
  30:Core/Src/stm32h7xx_it.c **** /* USER CODE END TD */
ARM GAS  /tmp/ccDxXG5m.s 			page 2


  31:Core/Src/stm32h7xx_it.c **** 
  32:Core/Src/stm32h7xx_it.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN PD */
  34:Core/Src/stm32h7xx_it.c **** 
  35:Core/Src/stm32h7xx_it.c **** /* USER CODE END PD */
  36:Core/Src/stm32h7xx_it.c **** 
  37:Core/Src/stm32h7xx_it.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN PM */
  39:Core/Src/stm32h7xx_it.c **** 
  40:Core/Src/stm32h7xx_it.c **** /* USER CODE END PM */
  41:Core/Src/stm32h7xx_it.c **** 
  42:Core/Src/stm32h7xx_it.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN PV */
  44:Core/Src/stm32h7xx_it.c **** 
  45:Core/Src/stm32h7xx_it.c **** /* USER CODE END PV */
  46:Core/Src/stm32h7xx_it.c **** 
  47:Core/Src/stm32h7xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  48:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN PFP */
  49:Core/Src/stm32h7xx_it.c **** 
  50:Core/Src/stm32h7xx_it.c **** /* USER CODE END PFP */
  51:Core/Src/stm32h7xx_it.c **** 
  52:Core/Src/stm32h7xx_it.c **** /* Private user code ---------------------------------------------------------*/
  53:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN 0 */
  54:Core/Src/stm32h7xx_it.c **** 
  55:Core/Src/stm32h7xx_it.c **** /* USER CODE END 0 */
  56:Core/Src/stm32h7xx_it.c **** 
  57:Core/Src/stm32h7xx_it.c **** /* External variables --------------------------------------------------------*/
  58:Core/Src/stm32h7xx_it.c **** 
  59:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN EV */
  60:Core/Src/stm32h7xx_it.c **** 
  61:Core/Src/stm32h7xx_it.c **** /* USER CODE END EV */
  62:Core/Src/stm32h7xx_it.c **** 
  63:Core/Src/stm32h7xx_it.c **** /******************************************************************************/
  64:Core/Src/stm32h7xx_it.c **** /*           Cortex Processor Interruption and Exception Handlers          */
  65:Core/Src/stm32h7xx_it.c **** /******************************************************************************/
  66:Core/Src/stm32h7xx_it.c **** /**
  67:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Non maskable interrupt.
  68:Core/Src/stm32h7xx_it.c ****   */
  69:Core/Src/stm32h7xx_it.c **** void NMI_Handler(void)
  70:Core/Src/stm32h7xx_it.c **** {
  29              		.loc 1 70 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.L2:
  71:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  72:Core/Src/stm32h7xx_it.c **** 
  73:Core/Src/stm32h7xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  74:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  75:Core/Src/stm32h7xx_it.c ****   while (1)
  36              		.loc 1 75 3 discriminator 1 view .LVU1
  76:Core/Src/stm32h7xx_it.c ****   {
  77:Core/Src/stm32h7xx_it.c ****   }
  37              		.loc 1 77 3 discriminator 1 view .LVU2
  75:Core/Src/stm32h7xx_it.c ****   {
ARM GAS  /tmp/ccDxXG5m.s 			page 3


  38              		.loc 1 75 9 discriminator 1 view .LVU3
  39 0000 FEE7     		b	.L2
  40              		.cfi_endproc
  41              	.LFE144:
  43 0002 00BF     		.section	.text.HardFault_Handler,"ax",%progbits
  44              		.align	1
  45              		.p2align 2,,3
  46              		.global	HardFault_Handler
  47              		.syntax unified
  48              		.thumb
  49              		.thumb_func
  50              		.fpu fpv5-d16
  52              	HardFault_Handler:
  53              	.LFB145:
  78:Core/Src/stm32h7xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  79:Core/Src/stm32h7xx_it.c **** }
  80:Core/Src/stm32h7xx_it.c **** 
  81:Core/Src/stm32h7xx_it.c **** /**
  82:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Hard fault interrupt.
  83:Core/Src/stm32h7xx_it.c ****   */
  84:Core/Src/stm32h7xx_it.c **** void HardFault_Handler(void)
  85:Core/Src/stm32h7xx_it.c **** {
  54              		.loc 1 85 1 view -0
  55              		.cfi_startproc
  56              		@ Volatile: function does not return.
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              	.L5:
  86:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  87:Core/Src/stm32h7xx_it.c **** 
  88:Core/Src/stm32h7xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  89:Core/Src/stm32h7xx_it.c ****   while (1)
  61              		.loc 1 89 3 discriminator 1 view .LVU5
  90:Core/Src/stm32h7xx_it.c ****   {
  91:Core/Src/stm32h7xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  92:Core/Src/stm32h7xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  93:Core/Src/stm32h7xx_it.c ****   }
  62              		.loc 1 93 3 discriminator 1 view .LVU6
  89:Core/Src/stm32h7xx_it.c ****   {
  63              		.loc 1 89 9 discriminator 1 view .LVU7
  64 0000 FEE7     		b	.L5
  65              		.cfi_endproc
  66              	.LFE145:
  68 0002 00BF     		.section	.text.MemManage_Handler,"ax",%progbits
  69              		.align	1
  70              		.p2align 2,,3
  71              		.global	MemManage_Handler
  72              		.syntax unified
  73              		.thumb
  74              		.thumb_func
  75              		.fpu fpv5-d16
  77              	MemManage_Handler:
  78              	.LFB146:
  94:Core/Src/stm32h7xx_it.c **** }
  95:Core/Src/stm32h7xx_it.c **** 
  96:Core/Src/stm32h7xx_it.c **** /**
ARM GAS  /tmp/ccDxXG5m.s 			page 4


  97:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Memory management fault.
  98:Core/Src/stm32h7xx_it.c ****   */
  99:Core/Src/stm32h7xx_it.c **** void MemManage_Handler(void)
 100:Core/Src/stm32h7xx_it.c **** {
  79              		.loc 1 100 1 view -0
  80              		.cfi_startproc
  81              		@ Volatile: function does not return.
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85              	.L7:
 101:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 102:Core/Src/stm32h7xx_it.c **** 
 103:Core/Src/stm32h7xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 104:Core/Src/stm32h7xx_it.c ****   while (1)
  86              		.loc 1 104 3 discriminator 1 view .LVU9
 105:Core/Src/stm32h7xx_it.c ****   {
 106:Core/Src/stm32h7xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 107:Core/Src/stm32h7xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 108:Core/Src/stm32h7xx_it.c ****   }
  87              		.loc 1 108 3 discriminator 1 view .LVU10
 104:Core/Src/stm32h7xx_it.c ****   {
  88              		.loc 1 104 9 discriminator 1 view .LVU11
  89 0000 FEE7     		b	.L7
  90              		.cfi_endproc
  91              	.LFE146:
  93 0002 00BF     		.section	.text.BusFault_Handler,"ax",%progbits
  94              		.align	1
  95              		.p2align 2,,3
  96              		.global	BusFault_Handler
  97              		.syntax unified
  98              		.thumb
  99              		.thumb_func
 100              		.fpu fpv5-d16
 102              	BusFault_Handler:
 103              	.LFB147:
 109:Core/Src/stm32h7xx_it.c **** }
 110:Core/Src/stm32h7xx_it.c **** 
 111:Core/Src/stm32h7xx_it.c **** /**
 112:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 113:Core/Src/stm32h7xx_it.c ****   */
 114:Core/Src/stm32h7xx_it.c **** void BusFault_Handler(void)
 115:Core/Src/stm32h7xx_it.c **** {
 104              		.loc 1 115 1 view -0
 105              		.cfi_startproc
 106              		@ Volatile: function does not return.
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 110              	.L9:
 116:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 117:Core/Src/stm32h7xx_it.c **** 
 118:Core/Src/stm32h7xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 119:Core/Src/stm32h7xx_it.c ****   while (1)
 111              		.loc 1 119 3 discriminator 1 view .LVU13
 120:Core/Src/stm32h7xx_it.c ****   {
 121:Core/Src/stm32h7xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
ARM GAS  /tmp/ccDxXG5m.s 			page 5


 122:Core/Src/stm32h7xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 123:Core/Src/stm32h7xx_it.c ****   }
 112              		.loc 1 123 3 discriminator 1 view .LVU14
 119:Core/Src/stm32h7xx_it.c ****   {
 113              		.loc 1 119 9 discriminator 1 view .LVU15
 114 0000 FEE7     		b	.L9
 115              		.cfi_endproc
 116              	.LFE147:
 118 0002 00BF     		.section	.text.UsageFault_Handler,"ax",%progbits
 119              		.align	1
 120              		.p2align 2,,3
 121              		.global	UsageFault_Handler
 122              		.syntax unified
 123              		.thumb
 124              		.thumb_func
 125              		.fpu fpv5-d16
 127              	UsageFault_Handler:
 128              	.LFB148:
 124:Core/Src/stm32h7xx_it.c **** }
 125:Core/Src/stm32h7xx_it.c **** 
 126:Core/Src/stm32h7xx_it.c **** /**
 127:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 128:Core/Src/stm32h7xx_it.c ****   */
 129:Core/Src/stm32h7xx_it.c **** void UsageFault_Handler(void)
 130:Core/Src/stm32h7xx_it.c **** {
 129              		.loc 1 130 1 view -0
 130              		.cfi_startproc
 131              		@ Volatile: function does not return.
 132              		@ args = 0, pretend = 0, frame = 0
 133              		@ frame_needed = 0, uses_anonymous_args = 0
 134              		@ link register save eliminated.
 135              	.L11:
 131:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 132:Core/Src/stm32h7xx_it.c **** 
 133:Core/Src/stm32h7xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 134:Core/Src/stm32h7xx_it.c ****   while (1)
 136              		.loc 1 134 3 discriminator 1 view .LVU17
 135:Core/Src/stm32h7xx_it.c ****   {
 136:Core/Src/stm32h7xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 137:Core/Src/stm32h7xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 138:Core/Src/stm32h7xx_it.c ****   }
 137              		.loc 1 138 3 discriminator 1 view .LVU18
 134:Core/Src/stm32h7xx_it.c ****   {
 138              		.loc 1 134 9 discriminator 1 view .LVU19
 139 0000 FEE7     		b	.L11
 140              		.cfi_endproc
 141              	.LFE148:
 143 0002 00BF     		.section	.text.SVC_Handler,"ax",%progbits
 144              		.align	1
 145              		.p2align 2,,3
 146              		.global	SVC_Handler
 147              		.syntax unified
 148              		.thumb
 149              		.thumb_func
 150              		.fpu fpv5-d16
 152              	SVC_Handler:
 153              	.LFB149:
ARM GAS  /tmp/ccDxXG5m.s 			page 6


 139:Core/Src/stm32h7xx_it.c **** }
 140:Core/Src/stm32h7xx_it.c **** 
 141:Core/Src/stm32h7xx_it.c **** /**
 142:Core/Src/stm32h7xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 143:Core/Src/stm32h7xx_it.c ****   */
 144:Core/Src/stm32h7xx_it.c **** void SVC_Handler(void)
 145:Core/Src/stm32h7xx_it.c **** {
 154              		.loc 1 145 1 view -0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158              		@ link register save eliminated.
 146:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 147:Core/Src/stm32h7xx_it.c **** 
 148:Core/Src/stm32h7xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 149:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 150:Core/Src/stm32h7xx_it.c **** 
 151:Core/Src/stm32h7xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 152:Core/Src/stm32h7xx_it.c **** }
 159              		.loc 1 152 1 view .LVU21
 160 0000 7047     		bx	lr
 161              		.cfi_endproc
 162              	.LFE149:
 164 0002 00BF     		.section	.text.DebugMon_Handler,"ax",%progbits
 165              		.align	1
 166              		.p2align 2,,3
 167              		.global	DebugMon_Handler
 168              		.syntax unified
 169              		.thumb
 170              		.thumb_func
 171              		.fpu fpv5-d16
 173              	DebugMon_Handler:
 174              	.LFB154:
 175              		.cfi_startproc
 176              		@ args = 0, pretend = 0, frame = 0
 177              		@ frame_needed = 0, uses_anonymous_args = 0
 178              		@ link register save eliminated.
 179 0000 7047     		bx	lr
 180              		.cfi_endproc
 181              	.LFE154:
 183 0002 00BF     		.section	.text.PendSV_Handler,"ax",%progbits
 184              		.align	1
 185              		.p2align 2,,3
 186              		.global	PendSV_Handler
 187              		.syntax unified
 188              		.thumb
 189              		.thumb_func
 190              		.fpu fpv5-d16
 192              	PendSV_Handler:
 193              	.LFB156:
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 0, uses_anonymous_args = 0
 197              		@ link register save eliminated.
 198 0000 7047     		bx	lr
 199              		.cfi_endproc
 200              	.LFE156:
ARM GAS  /tmp/ccDxXG5m.s 			page 7


 202 0002 00BF     		.section	.text.SysTick_Handler,"ax",%progbits
 203              		.align	1
 204              		.p2align 2,,3
 205              		.global	SysTick_Handler
 206              		.syntax unified
 207              		.thumb
 208              		.thumb_func
 209              		.fpu fpv5-d16
 211              	SysTick_Handler:
 212              	.LFB152:
 153:Core/Src/stm32h7xx_it.c **** 
 154:Core/Src/stm32h7xx_it.c **** /**
 155:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Debug monitor.
 156:Core/Src/stm32h7xx_it.c ****   */
 157:Core/Src/stm32h7xx_it.c **** void DebugMon_Handler(void)
 158:Core/Src/stm32h7xx_it.c **** {
 159:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 160:Core/Src/stm32h7xx_it.c **** 
 161:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 162:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 163:Core/Src/stm32h7xx_it.c **** 
 164:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 165:Core/Src/stm32h7xx_it.c **** }
 166:Core/Src/stm32h7xx_it.c **** 
 167:Core/Src/stm32h7xx_it.c **** /**
 168:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Pendable request for system service.
 169:Core/Src/stm32h7xx_it.c ****   */
 170:Core/Src/stm32h7xx_it.c **** void PendSV_Handler(void)
 171:Core/Src/stm32h7xx_it.c **** {
 172:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 173:Core/Src/stm32h7xx_it.c **** 
 174:Core/Src/stm32h7xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 175:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 176:Core/Src/stm32h7xx_it.c **** 
 177:Core/Src/stm32h7xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 178:Core/Src/stm32h7xx_it.c **** }
 179:Core/Src/stm32h7xx_it.c **** 
 180:Core/Src/stm32h7xx_it.c **** /**
 181:Core/Src/stm32h7xx_it.c ****   * @brief This function handles System tick timer.
 182:Core/Src/stm32h7xx_it.c ****   */
 183:Core/Src/stm32h7xx_it.c **** void SysTick_Handler(void)
 184:Core/Src/stm32h7xx_it.c **** {
 213              		.loc 1 184 1 view -0
 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 0
 216              		@ frame_needed = 0, uses_anonymous_args = 0
 217              		@ link register save eliminated.
 185:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 186:Core/Src/stm32h7xx_it.c **** 
 187:Core/Src/stm32h7xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 188:Core/Src/stm32h7xx_it.c ****   HAL_IncTick();
 218              		.loc 1 188 3 view .LVU23
 219 0000 FFF7FEBF 		b	HAL_IncTick
 220              	.LVL0:
 221              		.cfi_endproc
 222              	.LFE152:
 224              		.text
ARM GAS  /tmp/ccDxXG5m.s 			page 8


 225              	.Letext0:
 226              		.file 2 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
ARM GAS  /tmp/ccDxXG5m.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32h7xx_it.c
     /tmp/ccDxXG5m.s:17     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccDxXG5m.s:26     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccDxXG5m.s:44     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccDxXG5m.s:52     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccDxXG5m.s:69     .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccDxXG5m.s:77     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccDxXG5m.s:94     .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccDxXG5m.s:102    .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccDxXG5m.s:119    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccDxXG5m.s:127    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccDxXG5m.s:144    .text.SVC_Handler:0000000000000000 $t
     /tmp/ccDxXG5m.s:152    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/ccDxXG5m.s:165    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccDxXG5m.s:173    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccDxXG5m.s:184    .text.PendSV_Handler:0000000000000000 $t
     /tmp/ccDxXG5m.s:192    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/ccDxXG5m.s:203    .text.SysTick_Handler:0000000000000000 $t
     /tmp/ccDxXG5m.s:211    .text.SysTick_Handler:0000000000000000 SysTick_Handler

UNDEFINED SYMBOLS
HAL_IncTick
