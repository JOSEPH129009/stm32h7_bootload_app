ARM GAS  /tmp/ccr9e1AX.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"system_stm32h7xx.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.SystemInit,"ax",%progbits
  17              		.align	1
  18              		.p2align 2,,3
  19              		.global	SystemInit
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	SystemInit:
  27              	.LFB144:
  28              		.file 1 "Core/Src/system_stm32h7xx.c"
   1:Core/Src/system_stm32h7xx.c **** /**
   2:Core/Src/system_stm32h7xx.c ****   ******************************************************************************
   3:Core/Src/system_stm32h7xx.c ****   * @file    system_stm32h7xx.c
   4:Core/Src/system_stm32h7xx.c ****   * @author  MCD Application Team
   5:Core/Src/system_stm32h7xx.c ****   * @brief   CMSIS Cortex-Mx Device Peripheral Access Layer System Source File.
   6:Core/Src/system_stm32h7xx.c ****   *
   7:Core/Src/system_stm32h7xx.c ****   *   This file provides two functions and one global variable to be called from
   8:Core/Src/system_stm32h7xx.c ****   *   user application:
   9:Core/Src/system_stm32h7xx.c ****   *      - SystemInit(): This function is called at startup just after reset and
  10:Core/Src/system_stm32h7xx.c ****   *                      before branch to main program. This call is made inside
  11:Core/Src/system_stm32h7xx.c ****   *                      the "startup_stm32h7xx.s" file.
  12:Core/Src/system_stm32h7xx.c ****   *
  13:Core/Src/system_stm32h7xx.c ****   *      - SystemCoreClock variable: Contains the core clock, it can be used
  14:Core/Src/system_stm32h7xx.c ****   *                                  by the user application to setup the SysTick
  15:Core/Src/system_stm32h7xx.c ****   *                                  timer or configure other parameters.
  16:Core/Src/system_stm32h7xx.c ****   *
  17:Core/Src/system_stm32h7xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  18:Core/Src/system_stm32h7xx.c ****   *                                 be called whenever the core clock is changed
  19:Core/Src/system_stm32h7xx.c ****   *                                 during program execution.
  20:Core/Src/system_stm32h7xx.c ****   *
  21:Core/Src/system_stm32h7xx.c ****   *
  22:Core/Src/system_stm32h7xx.c ****   ******************************************************************************
  23:Core/Src/system_stm32h7xx.c ****   * @attention
  24:Core/Src/system_stm32h7xx.c ****   *
  25:Core/Src/system_stm32h7xx.c ****   * Copyright (c) 2017 STMicroelectronics.
  26:Core/Src/system_stm32h7xx.c ****   * All rights reserved.
  27:Core/Src/system_stm32h7xx.c ****   *
  28:Core/Src/system_stm32h7xx.c ****   * This software is licensed under terms that can be found in the LICENSE file
  29:Core/Src/system_stm32h7xx.c ****   * in the root directory of this software component.
  30:Core/Src/system_stm32h7xx.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
ARM GAS  /tmp/ccr9e1AX.s 			page 2


  31:Core/Src/system_stm32h7xx.c ****   *
  32:Core/Src/system_stm32h7xx.c ****   ******************************************************************************
  33:Core/Src/system_stm32h7xx.c ****   */
  34:Core/Src/system_stm32h7xx.c **** 
  35:Core/Src/system_stm32h7xx.c **** /** @addtogroup CMSIS
  36:Core/Src/system_stm32h7xx.c ****   * @{
  37:Core/Src/system_stm32h7xx.c ****   */
  38:Core/Src/system_stm32h7xx.c **** 
  39:Core/Src/system_stm32h7xx.c **** /** @addtogroup stm32h7xx_system
  40:Core/Src/system_stm32h7xx.c ****   * @{
  41:Core/Src/system_stm32h7xx.c ****   */
  42:Core/Src/system_stm32h7xx.c **** 
  43:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_Includes
  44:Core/Src/system_stm32h7xx.c ****   * @{
  45:Core/Src/system_stm32h7xx.c ****   */
  46:Core/Src/system_stm32h7xx.c **** 
  47:Core/Src/system_stm32h7xx.c **** #include "stm32h7xx.h"
  48:Core/Src/system_stm32h7xx.c **** #include <math.h>
  49:Core/Src/system_stm32h7xx.c **** 
  50:Core/Src/system_stm32h7xx.c **** #if !defined  (HSE_VALUE)
  51:Core/Src/system_stm32h7xx.c **** #define HSE_VALUE    ((uint32_t)25000000) /*!< Value of the External oscillator in Hz */
  52:Core/Src/system_stm32h7xx.c **** #endif /* HSE_VALUE */
  53:Core/Src/system_stm32h7xx.c **** 
  54:Core/Src/system_stm32h7xx.c **** #if !defined  (CSI_VALUE)
  55:Core/Src/system_stm32h7xx.c ****   #define CSI_VALUE    ((uint32_t)4000000) /*!< Value of the Internal oscillator in Hz*/
  56:Core/Src/system_stm32h7xx.c **** #endif /* CSI_VALUE */
  57:Core/Src/system_stm32h7xx.c **** 
  58:Core/Src/system_stm32h7xx.c **** #if !defined  (HSI_VALUE)
  59:Core/Src/system_stm32h7xx.c ****   #define HSI_VALUE    ((uint32_t)64000000) /*!< Value of the Internal oscillator in Hz*/
  60:Core/Src/system_stm32h7xx.c **** #endif /* HSI_VALUE */
  61:Core/Src/system_stm32h7xx.c **** 
  62:Core/Src/system_stm32h7xx.c **** 
  63:Core/Src/system_stm32h7xx.c **** /**
  64:Core/Src/system_stm32h7xx.c ****   * @}
  65:Core/Src/system_stm32h7xx.c ****   */
  66:Core/Src/system_stm32h7xx.c **** 
  67:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_TypesDefinitions
  68:Core/Src/system_stm32h7xx.c ****   * @{
  69:Core/Src/system_stm32h7xx.c ****   */
  70:Core/Src/system_stm32h7xx.c **** 
  71:Core/Src/system_stm32h7xx.c **** /**
  72:Core/Src/system_stm32h7xx.c ****   * @}
  73:Core/Src/system_stm32h7xx.c ****   */
  74:Core/Src/system_stm32h7xx.c **** 
  75:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_Defines
  76:Core/Src/system_stm32h7xx.c ****   * @{
  77:Core/Src/system_stm32h7xx.c ****   */
  78:Core/Src/system_stm32h7xx.c **** 
  79:Core/Src/system_stm32h7xx.c **** /************************* Miscellaneous Configuration ************************/
  80:Core/Src/system_stm32h7xx.c **** /*!< Uncomment the following line if you need to use initialized data in D2 domain SRAM (AHB SRAM) 
  81:Core/Src/system_stm32h7xx.c **** /* #define DATA_IN_D2_SRAM */
  82:Core/Src/system_stm32h7xx.c **** 
  83:Core/Src/system_stm32h7xx.c **** /* Note: Following vector table addresses must be defined in line with linker
  84:Core/Src/system_stm32h7xx.c ****          configuration. */
  85:Core/Src/system_stm32h7xx.c **** /*!< Uncomment the following line if you need to relocate the vector table
  86:Core/Src/system_stm32h7xx.c ****      anywhere in FLASH BANK1 or AXI SRAM, else the vector table is kept at the automatic
  87:Core/Src/system_stm32h7xx.c ****      remap of boot address selected */
ARM GAS  /tmp/ccr9e1AX.s 			page 3


  88:Core/Src/system_stm32h7xx.c **** /* #define USER_VECT_TAB_ADDRESS */
  89:Core/Src/system_stm32h7xx.c **** 
  90:Core/Src/system_stm32h7xx.c **** #if defined(USER_VECT_TAB_ADDRESS)
  91:Core/Src/system_stm32h7xx.c **** #if defined(DUAL_CORE) && defined(CORE_CM4)
  92:Core/Src/system_stm32h7xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table
  93:Core/Src/system_stm32h7xx.c ****      in D2 AXI SRAM else user remap will be done in FLASH BANK2. */
  94:Core/Src/system_stm32h7xx.c **** /* #define VECT_TAB_SRAM */
  95:Core/Src/system_stm32h7xx.c **** #if defined(VECT_TAB_SRAM)
  96:Core/Src/system_stm32h7xx.c **** #define VECT_TAB_BASE_ADDRESS   D2_AXISRAM_BASE   /*!< Vector Table base address field.
  97:Core/Src/system_stm32h7xx.c ****                                                        This value must be a multiple of 0x300. */
  98:Core/Src/system_stm32h7xx.c **** #define VECT_TAB_OFFSET         0x00000000U       /*!< Vector Table base offset field.
  99:Core/Src/system_stm32h7xx.c ****                                                        This value must be a multiple of 0x300. */
 100:Core/Src/system_stm32h7xx.c **** #else
 101:Core/Src/system_stm32h7xx.c **** #define VECT_TAB_BASE_ADDRESS   FLASH_BANK2_BASE  /*!< Vector Table base address field.
 102:Core/Src/system_stm32h7xx.c ****                                                        This value must be a multiple of 0x300. */
 103:Core/Src/system_stm32h7xx.c **** #define VECT_TAB_OFFSET         0x00000000U       /*!< Vector Table base offset field.
 104:Core/Src/system_stm32h7xx.c ****                                                        This value must be a multiple of 0x300. */
 105:Core/Src/system_stm32h7xx.c **** #endif /* VECT_TAB_SRAM */
 106:Core/Src/system_stm32h7xx.c **** #else
 107:Core/Src/system_stm32h7xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table
 108:Core/Src/system_stm32h7xx.c ****      in D1 AXI SRAM else user remap will be done in FLASH BANK1. */
 109:Core/Src/system_stm32h7xx.c **** /* #define VECT_TAB_SRAM */
 110:Core/Src/system_stm32h7xx.c **** #if defined(VECT_TAB_SRAM)
 111:Core/Src/system_stm32h7xx.c **** #define VECT_TAB_BASE_ADDRESS   D1_AXISRAM_BASE   /*!< Vector Table base address field.
 112:Core/Src/system_stm32h7xx.c ****                                                        This value must be a multiple of 0x300. */
 113:Core/Src/system_stm32h7xx.c **** #define VECT_TAB_OFFSET         0x00000000U       /*!< Vector Table base offset field.
 114:Core/Src/system_stm32h7xx.c ****                                                        This value must be a multiple of 0x300. */
 115:Core/Src/system_stm32h7xx.c **** #else
 116:Core/Src/system_stm32h7xx.c **** #define VECT_TAB_BASE_ADDRESS   FLASH_BANK1_BASE  /*!< Vector Table base address field.
 117:Core/Src/system_stm32h7xx.c ****                                                        This value must be a multiple of 0x300. */
 118:Core/Src/system_stm32h7xx.c **** #define VECT_TAB_OFFSET         0x00000000U       /*!< Vector Table base offset field.
 119:Core/Src/system_stm32h7xx.c ****                                                        This value must be a multiple of 0x300. */
 120:Core/Src/system_stm32h7xx.c **** #endif /* VECT_TAB_SRAM */
 121:Core/Src/system_stm32h7xx.c **** #endif /* DUAL_CORE && CORE_CM4 */
 122:Core/Src/system_stm32h7xx.c **** #endif /* USER_VECT_TAB_ADDRESS */
 123:Core/Src/system_stm32h7xx.c **** /******************************************************************************/
 124:Core/Src/system_stm32h7xx.c **** 
 125:Core/Src/system_stm32h7xx.c **** /**
 126:Core/Src/system_stm32h7xx.c ****   * @}
 127:Core/Src/system_stm32h7xx.c ****   */
 128:Core/Src/system_stm32h7xx.c **** 
 129:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_Macros
 130:Core/Src/system_stm32h7xx.c ****   * @{
 131:Core/Src/system_stm32h7xx.c ****   */
 132:Core/Src/system_stm32h7xx.c **** 
 133:Core/Src/system_stm32h7xx.c **** /**
 134:Core/Src/system_stm32h7xx.c ****   * @}
 135:Core/Src/system_stm32h7xx.c ****   */
 136:Core/Src/system_stm32h7xx.c **** 
 137:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_Variables
 138:Core/Src/system_stm32h7xx.c ****   * @{
 139:Core/Src/system_stm32h7xx.c ****   */
 140:Core/Src/system_stm32h7xx.c ****   /* This variable is updated in three ways:
 141:Core/Src/system_stm32h7xx.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
 142:Core/Src/system_stm32h7xx.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
 143:Core/Src/system_stm32h7xx.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency
 144:Core/Src/system_stm32h7xx.c ****          Note: If you use this function to configure the system clock; then there
ARM GAS  /tmp/ccr9e1AX.s 			page 4


 145:Core/Src/system_stm32h7xx.c ****                is no need to call the 2 first functions listed above, since SystemCoreClock
 146:Core/Src/system_stm32h7xx.c ****                variable is updated automatically.
 147:Core/Src/system_stm32h7xx.c ****   */
 148:Core/Src/system_stm32h7xx.c ****   uint32_t SystemCoreClock = 64000000;
 149:Core/Src/system_stm32h7xx.c ****   uint32_t SystemD2Clock = 64000000;
 150:Core/Src/system_stm32h7xx.c ****   const  uint8_t D1CorePrescTable[16] = {0, 0, 0, 0, 1, 2, 3, 4, 1, 2, 3, 4, 6, 7, 8, 9};
 151:Core/Src/system_stm32h7xx.c **** 
 152:Core/Src/system_stm32h7xx.c **** /**
 153:Core/Src/system_stm32h7xx.c ****   * @}
 154:Core/Src/system_stm32h7xx.c ****   */
 155:Core/Src/system_stm32h7xx.c **** 
 156:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_FunctionPrototypes
 157:Core/Src/system_stm32h7xx.c ****   * @{
 158:Core/Src/system_stm32h7xx.c ****   */
 159:Core/Src/system_stm32h7xx.c **** 
 160:Core/Src/system_stm32h7xx.c **** /**
 161:Core/Src/system_stm32h7xx.c ****   * @}
 162:Core/Src/system_stm32h7xx.c ****   */
 163:Core/Src/system_stm32h7xx.c **** 
 164:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_Functions
 165:Core/Src/system_stm32h7xx.c ****   * @{
 166:Core/Src/system_stm32h7xx.c ****   */
 167:Core/Src/system_stm32h7xx.c **** 
 168:Core/Src/system_stm32h7xx.c **** /**
 169:Core/Src/system_stm32h7xx.c ****   * @brief  Setup the microcontroller system
 170:Core/Src/system_stm32h7xx.c ****   *         Initialize the FPU setting and  vector table location
 171:Core/Src/system_stm32h7xx.c ****   *         configuration.
 172:Core/Src/system_stm32h7xx.c ****   * @param  None
 173:Core/Src/system_stm32h7xx.c ****   * @retval None
 174:Core/Src/system_stm32h7xx.c ****   */
 175:Core/Src/system_stm32h7xx.c **** void SystemInit (void)
 176:Core/Src/system_stm32h7xx.c **** {
  29              		.loc 1 176 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 177:Core/Src/system_stm32h7xx.c **** #if defined (DATA_IN_D2_SRAM)
 178:Core/Src/system_stm32h7xx.c ****  __IO uint32_t tmpreg;
 179:Core/Src/system_stm32h7xx.c **** #endif /* DATA_IN_D2_SRAM */
 180:Core/Src/system_stm32h7xx.c **** 
 181:Core/Src/system_stm32h7xx.c ****   /* FPU settings ------------------------------------------------------------*/
 182:Core/Src/system_stm32h7xx.c ****   #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 183:Core/Src/system_stm32h7xx.c ****     SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
  34              		.loc 1 183 5 view .LVU1
  35              		.loc 1 183 16 is_stmt 0 view .LVU2
  36 0000 2749     		ldr	r1, .L10
 184:Core/Src/system_stm32h7xx.c ****   #endif
 185:Core/Src/system_stm32h7xx.c ****   /* Reset the RCC clock configuration to the default reset state ------------*/
 186:Core/Src/system_stm32h7xx.c **** 
 187:Core/Src/system_stm32h7xx.c ****    /* Increasing the CPU frequency */
 188:Core/Src/system_stm32h7xx.c ****   if(FLASH_LATENCY_DEFAULT  > (READ_BIT((FLASH->ACR), FLASH_ACR_LATENCY)))
  37              		.loc 1 188 32 view .LVU3
  38 0002 284A     		ldr	r2, .L10+4
 183:Core/Src/system_stm32h7xx.c ****   #endif
  39              		.loc 1 183 16 view .LVU4
  40 0004 D1F88830 		ldr	r3, [r1, #136]
ARM GAS  /tmp/ccr9e1AX.s 			page 5


  41 0008 43F47003 		orr	r3, r3, #15728640
 176:Core/Src/system_stm32h7xx.c **** #if defined (DATA_IN_D2_SRAM)
  42              		.loc 1 176 1 view .LVU5
  43 000c 10B4     		push	{r4}
  44              	.LCFI0:
  45              		.cfi_def_cfa_offset 4
  46              		.cfi_offset 4, -4
 183:Core/Src/system_stm32h7xx.c ****   #endif
  47              		.loc 1 183 16 view .LVU6
  48 000e C1F88830 		str	r3, [r1, #136]
  49              		.loc 1 188 3 is_stmt 1 view .LVU7
  50              		.loc 1 188 32 is_stmt 0 view .LVU8
  51 0012 1368     		ldr	r3, [r2]
  52 0014 03F00F03 		and	r3, r3, #15
  53              		.loc 1 188 5 view .LVU9
  54 0018 062B     		cmp	r3, #6
  55 001a 05D8     		bhi	.L2
 189:Core/Src/system_stm32h7xx.c ****   {
 190:Core/Src/system_stm32h7xx.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 191:Core/Src/system_stm32h7xx.c ****     MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, (uint32_t)(FLASH_LATENCY_DEFAULT));
  56              		.loc 1 191 5 is_stmt 1 view .LVU10
  57 001c 1368     		ldr	r3, [r2]
  58 001e 23F00F03 		bic	r3, r3, #15
  59 0022 43F00703 		orr	r3, r3, #7
  60 0026 1360     		str	r3, [r2]
  61              	.L2:
 192:Core/Src/system_stm32h7xx.c ****   }
 193:Core/Src/system_stm32h7xx.c **** 
 194:Core/Src/system_stm32h7xx.c ****   /* Set HSION bit */
 195:Core/Src/system_stm32h7xx.c ****   RCC->CR |= RCC_CR_HSION;
  62              		.loc 1 195 3 view .LVU11
  63              		.loc 1 195 11 is_stmt 0 view .LVU12
  64 0028 1F4B     		ldr	r3, .L10+8
 196:Core/Src/system_stm32h7xx.c **** 
 197:Core/Src/system_stm32h7xx.c ****   /* Reset CFGR register */
 198:Core/Src/system_stm32h7xx.c ****   RCC->CFGR = 0x00000000;
  65              		.loc 1 198 13 view .LVU13
  66 002a 0024     		movs	r4, #0
 199:Core/Src/system_stm32h7xx.c **** 
 200:Core/Src/system_stm32h7xx.c ****   /* Reset HSEON, HSECSSON, CSION, HSI48ON, CSIKERON, PLL1ON, PLL2ON and PLL3ON bits */
 201:Core/Src/system_stm32h7xx.c ****   RCC->CR &= 0xEAF6ED7FU;
  67              		.loc 1 201 11 view .LVU14
  68 002c 1F4A     		ldr	r2, .L10+12
 195:Core/Src/system_stm32h7xx.c **** 
  69              		.loc 1 195 11 view .LVU15
  70 002e 1968     		ldr	r1, [r3]
 202:Core/Src/system_stm32h7xx.c **** 
 203:Core/Src/system_stm32h7xx.c ****    /* Decreasing the number of wait states because of lower CPU frequency */
 204:Core/Src/system_stm32h7xx.c ****   if(FLASH_LATENCY_DEFAULT  < (READ_BIT((FLASH->ACR), FLASH_ACR_LATENCY)))
  71              		.loc 1 204 32 view .LVU16
  72 0030 1C48     		ldr	r0, .L10+4
 195:Core/Src/system_stm32h7xx.c **** 
  73              		.loc 1 195 11 view .LVU17
  74 0032 41F00101 		orr	r1, r1, #1
  75 0036 1960     		str	r1, [r3]
 198:Core/Src/system_stm32h7xx.c **** 
  76              		.loc 1 198 3 is_stmt 1 view .LVU18
ARM GAS  /tmp/ccr9e1AX.s 			page 6


 198:Core/Src/system_stm32h7xx.c **** 
  77              		.loc 1 198 13 is_stmt 0 view .LVU19
  78 0038 1C61     		str	r4, [r3, #16]
 201:Core/Src/system_stm32h7xx.c **** 
  79              		.loc 1 201 3 is_stmt 1 view .LVU20
 201:Core/Src/system_stm32h7xx.c **** 
  80              		.loc 1 201 11 is_stmt 0 view .LVU21
  81 003a 1968     		ldr	r1, [r3]
  82 003c 0A40     		ands	r2, r2, r1
  83 003e 1A60     		str	r2, [r3]
  84              		.loc 1 204 3 is_stmt 1 view .LVU22
  85              		.loc 1 204 32 is_stmt 0 view .LVU23
  86 0040 0368     		ldr	r3, [r0]
  87              		.loc 1 204 5 view .LVU24
  88 0042 1B07     		lsls	r3, r3, #28
  89 0044 05D5     		bpl	.L3
 205:Core/Src/system_stm32h7xx.c ****   {
 206:Core/Src/system_stm32h7xx.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 207:Core/Src/system_stm32h7xx.c ****     MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, (uint32_t)(FLASH_LATENCY_DEFAULT));
  90              		.loc 1 207 5 is_stmt 1 view .LVU25
  91 0046 0368     		ldr	r3, [r0]
  92 0048 23F00F03 		bic	r3, r3, #15
  93 004c 43F00703 		orr	r3, r3, #7
  94 0050 0360     		str	r3, [r0]
  95              	.L3:
 208:Core/Src/system_stm32h7xx.c ****   }
 209:Core/Src/system_stm32h7xx.c **** 
 210:Core/Src/system_stm32h7xx.c **** #if defined(D3_SRAM_BASE)
 211:Core/Src/system_stm32h7xx.c ****   /* Reset D1CFGR register */
 212:Core/Src/system_stm32h7xx.c ****   RCC->D1CFGR = 0x00000000;
  96              		.loc 1 212 3 view .LVU26
  97              		.loc 1 212 15 is_stmt 0 view .LVU27
  98 0052 154B     		ldr	r3, .L10+8
  99 0054 0022     		movs	r2, #0
 213:Core/Src/system_stm32h7xx.c **** 
 214:Core/Src/system_stm32h7xx.c ****   /* Reset D2CFGR register */
 215:Core/Src/system_stm32h7xx.c ****   RCC->D2CFGR = 0x00000000;
 216:Core/Src/system_stm32h7xx.c **** 
 217:Core/Src/system_stm32h7xx.c ****   /* Reset D3CFGR register */
 218:Core/Src/system_stm32h7xx.c ****   RCC->D3CFGR = 0x00000000;
 219:Core/Src/system_stm32h7xx.c **** #else
 220:Core/Src/system_stm32h7xx.c ****   /* Reset CDCFGR1 register */
 221:Core/Src/system_stm32h7xx.c ****   RCC->CDCFGR1 = 0x00000000;
 222:Core/Src/system_stm32h7xx.c **** 
 223:Core/Src/system_stm32h7xx.c ****   /* Reset CDCFGR2 register */
 224:Core/Src/system_stm32h7xx.c ****   RCC->CDCFGR2 = 0x00000000;
 225:Core/Src/system_stm32h7xx.c **** 
 226:Core/Src/system_stm32h7xx.c ****   /* Reset SRDCFGR register */
 227:Core/Src/system_stm32h7xx.c ****   RCC->SRDCFGR = 0x00000000;
 228:Core/Src/system_stm32h7xx.c **** #endif
 229:Core/Src/system_stm32h7xx.c ****   /* Reset PLLCKSELR register */
 230:Core/Src/system_stm32h7xx.c ****   RCC->PLLCKSELR = 0x02020200;
 231:Core/Src/system_stm32h7xx.c **** 
 232:Core/Src/system_stm32h7xx.c ****   /* Reset PLLCFGR register */
 233:Core/Src/system_stm32h7xx.c ****   RCC->PLLCFGR = 0x01FF0000;
 234:Core/Src/system_stm32h7xx.c ****   /* Reset PLL1DIVR register */
 235:Core/Src/system_stm32h7xx.c ****   RCC->PLL1DIVR = 0x01010280;
ARM GAS  /tmp/ccr9e1AX.s 			page 7


 100              		.loc 1 235 17 view .LVU28
 101 0056 1649     		ldr	r1, .L10+16
 230:Core/Src/system_stm32h7xx.c **** 
 102              		.loc 1 230 18 view .LVU29
 103 0058 164C     		ldr	r4, .L10+20
 233:Core/Src/system_stm32h7xx.c ****   /* Reset PLL1DIVR register */
 104              		.loc 1 233 16 view .LVU30
 105 005a 1748     		ldr	r0, .L10+24
 212:Core/Src/system_stm32h7xx.c **** 
 106              		.loc 1 212 15 view .LVU31
 107 005c 9A61     		str	r2, [r3, #24]
 215:Core/Src/system_stm32h7xx.c **** 
 108              		.loc 1 215 3 is_stmt 1 view .LVU32
 215:Core/Src/system_stm32h7xx.c **** 
 109              		.loc 1 215 15 is_stmt 0 view .LVU33
 110 005e DA61     		str	r2, [r3, #28]
 218:Core/Src/system_stm32h7xx.c **** #else
 111              		.loc 1 218 3 is_stmt 1 view .LVU34
 218:Core/Src/system_stm32h7xx.c **** #else
 112              		.loc 1 218 15 is_stmt 0 view .LVU35
 113 0060 1A62     		str	r2, [r3, #32]
 230:Core/Src/system_stm32h7xx.c **** 
 114              		.loc 1 230 3 is_stmt 1 view .LVU36
 230:Core/Src/system_stm32h7xx.c **** 
 115              		.loc 1 230 18 is_stmt 0 view .LVU37
 116 0062 9C62     		str	r4, [r3, #40]
 233:Core/Src/system_stm32h7xx.c ****   /* Reset PLL1DIVR register */
 117              		.loc 1 233 3 is_stmt 1 view .LVU38
 233:Core/Src/system_stm32h7xx.c ****   /* Reset PLL1DIVR register */
 118              		.loc 1 233 16 is_stmt 0 view .LVU39
 119 0064 D862     		str	r0, [r3, #44]
 120              		.loc 1 235 3 is_stmt 1 view .LVU40
 121              		.loc 1 235 17 is_stmt 0 view .LVU41
 122 0066 1963     		str	r1, [r3, #48]
 236:Core/Src/system_stm32h7xx.c ****   /* Reset PLL1FRACR register */
 237:Core/Src/system_stm32h7xx.c ****   RCC->PLL1FRACR = 0x00000000;
 123              		.loc 1 237 3 is_stmt 1 view .LVU42
 124              		.loc 1 237 18 is_stmt 0 view .LVU43
 125 0068 5A63     		str	r2, [r3, #52]
 238:Core/Src/system_stm32h7xx.c **** 
 239:Core/Src/system_stm32h7xx.c ****   /* Reset PLL2DIVR register */
 240:Core/Src/system_stm32h7xx.c ****   RCC->PLL2DIVR = 0x01010280;
 126              		.loc 1 240 3 is_stmt 1 view .LVU44
 127              		.loc 1 240 17 is_stmt 0 view .LVU45
 128 006a 9963     		str	r1, [r3, #56]
 241:Core/Src/system_stm32h7xx.c **** 
 242:Core/Src/system_stm32h7xx.c ****   /* Reset PLL2FRACR register */
 243:Core/Src/system_stm32h7xx.c **** 
 244:Core/Src/system_stm32h7xx.c ****   RCC->PLL2FRACR = 0x00000000;
 129              		.loc 1 244 3 is_stmt 1 view .LVU46
 130              		.loc 1 244 18 is_stmt 0 view .LVU47
 131 006c DA63     		str	r2, [r3, #60]
 245:Core/Src/system_stm32h7xx.c ****   /* Reset PLL3DIVR register */
 246:Core/Src/system_stm32h7xx.c ****   RCC->PLL3DIVR = 0x01010280;
 132              		.loc 1 246 3 is_stmt 1 view .LVU48
 133              		.loc 1 246 17 is_stmt 0 view .LVU49
 134 006e 1964     		str	r1, [r3, #64]
ARM GAS  /tmp/ccr9e1AX.s 			page 8


 247:Core/Src/system_stm32h7xx.c **** 
 248:Core/Src/system_stm32h7xx.c ****   /* Reset PLL3FRACR register */
 249:Core/Src/system_stm32h7xx.c ****   RCC->PLL3FRACR = 0x00000000;
 135              		.loc 1 249 3 is_stmt 1 view .LVU50
 136              		.loc 1 249 18 is_stmt 0 view .LVU51
 137 0070 5A64     		str	r2, [r3, #68]
 250:Core/Src/system_stm32h7xx.c **** 
 251:Core/Src/system_stm32h7xx.c ****   /* Reset HSEBYP bit */
 252:Core/Src/system_stm32h7xx.c ****   RCC->CR &= 0xFFFBFFFFU;
 138              		.loc 1 252 3 is_stmt 1 view .LVU52
 139              		.loc 1 252 11 is_stmt 0 view .LVU53
 140 0072 1868     		ldr	r0, [r3]
 253:Core/Src/system_stm32h7xx.c **** 
 254:Core/Src/system_stm32h7xx.c ****   /* Disable all interrupts */
 255:Core/Src/system_stm32h7xx.c ****   RCC->CIER = 0x00000000;
 256:Core/Src/system_stm32h7xx.c **** 
 257:Core/Src/system_stm32h7xx.c **** #if (STM32H7_DEV_ID == 0x450UL)
 258:Core/Src/system_stm32h7xx.c ****   /* dual core CM7 or single core line */
 259:Core/Src/system_stm32h7xx.c ****   if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
 141              		.loc 1 259 13 view .LVU54
 142 0074 114C     		ldr	r4, .L10+28
 252:Core/Src/system_stm32h7xx.c **** 
 143              		.loc 1 252 11 view .LVU55
 144 0076 20F48020 		bic	r0, r0, #262144
 145              		.loc 1 259 22 view .LVU56
 146 007a 1149     		ldr	r1, .L10+32
 252:Core/Src/system_stm32h7xx.c **** 
 147              		.loc 1 252 11 view .LVU57
 148 007c 1860     		str	r0, [r3]
 255:Core/Src/system_stm32h7xx.c **** 
 149              		.loc 1 255 3 is_stmt 1 view .LVU58
 255:Core/Src/system_stm32h7xx.c **** 
 150              		.loc 1 255 13 is_stmt 0 view .LVU59
 151 007e 1A66     		str	r2, [r3, #96]
 152              		.loc 1 259 3 is_stmt 1 view .LVU60
 153              		.loc 1 259 13 is_stmt 0 view .LVU61
 154 0080 2368     		ldr	r3, [r4]
 155              		.loc 1 259 22 view .LVU62
 156 0082 1940     		ands	r1, r1, r3
 157              		.loc 1 259 5 view .LVU63
 158 0084 B1F1005F 		cmp	r1, #536870912
 159 0088 03D2     		bcs	.L4
 260:Core/Src/system_stm32h7xx.c ****   {
 261:Core/Src/system_stm32h7xx.c ****     /* if stm32h7 revY*/
 262:Core/Src/system_stm32h7xx.c ****     /* Change  the switch matrix read issuing capability to 1 for the AXI SRAM target (Target 7) */
 263:Core/Src/system_stm32h7xx.c ****     *((__IO uint32_t*)0x51008108) = 0x000000001U;
 160              		.loc 1 263 5 is_stmt 1 view .LVU64
 161              		.loc 1 263 35 is_stmt 0 view .LVU65
 162 008a 0E4B     		ldr	r3, .L10+36
 163 008c 0122     		movs	r2, #1
 164 008e C3F80821 		str	r2, [r3, #264]
 165              	.L4:
 264:Core/Src/system_stm32h7xx.c ****   }
 265:Core/Src/system_stm32h7xx.c **** #endif /* STM32H7_DEV_ID */
 266:Core/Src/system_stm32h7xx.c **** 
 267:Core/Src/system_stm32h7xx.c **** #if defined(DATA_IN_D2_SRAM)
 268:Core/Src/system_stm32h7xx.c ****   /* in case of initialized data in D2 SRAM (AHB SRAM), enable the D2 SRAM clock (AHB SRAM clock) *
ARM GAS  /tmp/ccr9e1AX.s 			page 9


 269:Core/Src/system_stm32h7xx.c **** #if defined(RCC_AHB2ENR_D2SRAM3EN)
 270:Core/Src/system_stm32h7xx.c ****   RCC->AHB2ENR |= (RCC_AHB2ENR_D2SRAM1EN | RCC_AHB2ENR_D2SRAM2EN | RCC_AHB2ENR_D2SRAM3EN);
 271:Core/Src/system_stm32h7xx.c **** #elif defined(RCC_AHB2ENR_D2SRAM2EN)
 272:Core/Src/system_stm32h7xx.c ****   RCC->AHB2ENR |= (RCC_AHB2ENR_D2SRAM1EN | RCC_AHB2ENR_D2SRAM2EN);
 273:Core/Src/system_stm32h7xx.c **** #else
 274:Core/Src/system_stm32h7xx.c ****   RCC->AHB2ENR |= (RCC_AHB2ENR_AHBSRAM1EN | RCC_AHB2ENR_AHBSRAM2EN);
 275:Core/Src/system_stm32h7xx.c **** #endif /* RCC_AHB2ENR_D2SRAM3EN */
 276:Core/Src/system_stm32h7xx.c **** 
 277:Core/Src/system_stm32h7xx.c ****   tmpreg = RCC->AHB2ENR;
 278:Core/Src/system_stm32h7xx.c ****   (void) tmpreg;
 279:Core/Src/system_stm32h7xx.c **** #endif /* DATA_IN_D2_SRAM */
 280:Core/Src/system_stm32h7xx.c **** 
 281:Core/Src/system_stm32h7xx.c **** #if defined(DUAL_CORE) && defined(CORE_CM4)
 282:Core/Src/system_stm32h7xx.c ****   /* Configure the Vector Table location add offset address for cortex-M4 ------------------*/
 283:Core/Src/system_stm32h7xx.c **** #if defined(USER_VECT_TAB_ADDRESS)
 284:Core/Src/system_stm32h7xx.c ****   SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D2 AX
 285:Core/Src/system_stm32h7xx.c **** #endif /* USER_VECT_TAB_ADDRESS */
 286:Core/Src/system_stm32h7xx.c **** 
 287:Core/Src/system_stm32h7xx.c **** #else
 288:Core/Src/system_stm32h7xx.c ****   /*
 289:Core/Src/system_stm32h7xx.c ****    * Disable the FMC bank1 (enabled after reset).
 290:Core/Src/system_stm32h7xx.c ****    * This, prevents CPU speculation access on this bank which blocks the use of FMC during
 291:Core/Src/system_stm32h7xx.c ****    * 24us. During this time the others FMC master (such as LTDC) cannot use it!
 292:Core/Src/system_stm32h7xx.c ****    */
 293:Core/Src/system_stm32h7xx.c ****   FMC_Bank1_R->BTCR[0] = 0x000030D2;
 166              		.loc 1 293 3 is_stmt 1 view .LVU66
 167              		.loc 1 293 24 is_stmt 0 view .LVU67
 168 0092 0D4B     		ldr	r3, .L10+40
 169 0094 43F2D202 		movw	r2, #12498
 294:Core/Src/system_stm32h7xx.c **** 
 295:Core/Src/system_stm32h7xx.c ****   /* Configure the Vector Table location -------------------------------------*/
 296:Core/Src/system_stm32h7xx.c **** #if defined(USER_VECT_TAB_ADDRESS)
 297:Core/Src/system_stm32h7xx.c ****   SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D1 AX
 298:Core/Src/system_stm32h7xx.c **** #endif /* USER_VECT_TAB_ADDRESS */
 299:Core/Src/system_stm32h7xx.c **** 
 300:Core/Src/system_stm32h7xx.c **** #endif /*DUAL_CORE && CORE_CM4*/
 301:Core/Src/system_stm32h7xx.c **** }
 170              		.loc 1 301 1 view .LVU68
 171 0098 5DF8044B 		ldr	r4, [sp], #4
 172              	.LCFI1:
 173              		.cfi_restore 4
 174              		.cfi_def_cfa_offset 0
 293:Core/Src/system_stm32h7xx.c **** 
 175              		.loc 1 293 24 view .LVU69
 176 009c 1A60     		str	r2, [r3]
 177              		.loc 1 301 1 view .LVU70
 178 009e 7047     		bx	lr
 179              	.L11:
 180              		.align	2
 181              	.L10:
 182 00a0 00ED00E0 		.word	-536810240
 183 00a4 00200052 		.word	1375739904
 184 00a8 00440258 		.word	1476543488
 185 00ac 7FEDF6EA 		.word	-352916097
 186 00b0 80020101 		.word	16843392
 187 00b4 00020202 		.word	33686016
 188 00b8 0000FF01 		.word	33488896
ARM GAS  /tmp/ccr9e1AX.s 			page 10


 189 00bc 0010005C 		.word	1543507968
 190 00c0 0000FFFF 		.word	-65536
 191 00c4 00800051 		.word	1358987264
 192 00c8 00400052 		.word	1375748096
 193              		.cfi_endproc
 194              	.LFE144:
 196              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
 197              		.align	1
 198              		.p2align 2,,3
 199              		.global	SystemCoreClockUpdate
 200              		.syntax unified
 201              		.thumb
 202              		.thumb_func
 203              		.fpu fpv5-d16
 205              	SystemCoreClockUpdate:
 206              	.LFB145:
 302:Core/Src/system_stm32h7xx.c **** 
 303:Core/Src/system_stm32h7xx.c **** /**
 304:Core/Src/system_stm32h7xx.c ****    * @brief  Update SystemCoreClock variable according to Clock Register Values.
 305:Core/Src/system_stm32h7xx.c ****   *         The SystemCoreClock variable contains the core clock , it can
 306:Core/Src/system_stm32h7xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 307:Core/Src/system_stm32h7xx.c ****   *         other parameters.
 308:Core/Src/system_stm32h7xx.c ****   *
 309:Core/Src/system_stm32h7xx.c ****   * @note   Each time the core clock changes, this function must be called
 310:Core/Src/system_stm32h7xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 311:Core/Src/system_stm32h7xx.c ****   *         based on this variable will be incorrect.
 312:Core/Src/system_stm32h7xx.c ****   *
 313:Core/Src/system_stm32h7xx.c ****   * @note   - The system frequency computed by this function is not the real
 314:Core/Src/system_stm32h7xx.c ****   *           frequency in the chip. It is calculated based on the predefined
 315:Core/Src/system_stm32h7xx.c ****   *           constant and the selected clock source:
 316:Core/Src/system_stm32h7xx.c ****   *
 317:Core/Src/system_stm32h7xx.c ****   *           - If SYSCLK source is CSI, SystemCoreClock will contain the CSI_VALUE(*)
 318:Core/Src/system_stm32h7xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(**)
 319:Core/Src/system_stm32h7xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(***)
 320:Core/Src/system_stm32h7xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the CSI_VALUE(*),
 321:Core/Src/system_stm32h7xx.c ****   *             HSI_VALUE(**) or HSE_VALUE(***) multiplied/divided by the PLL factors.
 322:Core/Src/system_stm32h7xx.c ****   *
 323:Core/Src/system_stm32h7xx.c ****   *         (*) CSI_VALUE is a constant defined in stm32h7xx_hal.h file (default value
 324:Core/Src/system_stm32h7xx.c ****   *             4 MHz) but the real value may vary depending on the variations
 325:Core/Src/system_stm32h7xx.c ****   *             in voltage and temperature.
 326:Core/Src/system_stm32h7xx.c ****   *         (**) HSI_VALUE is a constant defined in stm32h7xx_hal.h file (default value
 327:Core/Src/system_stm32h7xx.c ****   *             64 MHz) but the real value may vary depending on the variations
 328:Core/Src/system_stm32h7xx.c ****   *             in voltage and temperature.
 329:Core/Src/system_stm32h7xx.c ****   *
 330:Core/Src/system_stm32h7xx.c ****   *         (***)HSE_VALUE is a constant defined in stm32h7xx_hal.h file (default value
 331:Core/Src/system_stm32h7xx.c ****   *              25 MHz), user has to ensure that HSE_VALUE is same as the real
 332:Core/Src/system_stm32h7xx.c ****   *              frequency of the crystal used. Otherwise, this function may
 333:Core/Src/system_stm32h7xx.c ****   *              have wrong result.
 334:Core/Src/system_stm32h7xx.c ****   *
 335:Core/Src/system_stm32h7xx.c ****   *         - The result of this function could be not correct when using fractional
 336:Core/Src/system_stm32h7xx.c ****   *           value for HSE crystal.
 337:Core/Src/system_stm32h7xx.c ****   * @param  None
 338:Core/Src/system_stm32h7xx.c ****   * @retval None
 339:Core/Src/system_stm32h7xx.c ****   */
 340:Core/Src/system_stm32h7xx.c **** void SystemCoreClockUpdate (void)
 341:Core/Src/system_stm32h7xx.c **** {
 207              		.loc 1 341 1 is_stmt 1 view -0
ARM GAS  /tmp/ccr9e1AX.s 			page 11


 208              		.cfi_startproc
 209              		@ args = 0, pretend = 0, frame = 0
 210              		@ frame_needed = 0, uses_anonymous_args = 0
 211              		@ link register save eliminated.
 342:Core/Src/system_stm32h7xx.c ****   uint32_t pllp, pllsource, pllm, pllfracen, hsivalue, tmp;
 212              		.loc 1 342 3 view .LVU72
 343:Core/Src/system_stm32h7xx.c ****   uint32_t common_system_clock;
 213              		.loc 1 343 3 view .LVU73
 344:Core/Src/system_stm32h7xx.c ****   float_t fracn1, pllvco;
 214              		.loc 1 344 3 view .LVU74
 345:Core/Src/system_stm32h7xx.c **** 
 346:Core/Src/system_stm32h7xx.c **** 
 347:Core/Src/system_stm32h7xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 348:Core/Src/system_stm32h7xx.c **** 
 349:Core/Src/system_stm32h7xx.c ****   switch (RCC->CFGR & RCC_CFGR_SWS)
 215              		.loc 1 349 3 view .LVU75
 216              		.loc 1 349 14 is_stmt 0 view .LVU76
 217 0000 504B     		ldr	r3, .L29
 218 0002 1B69     		ldr	r3, [r3, #16]
 219              		.loc 1 349 21 view .LVU77
 220 0004 03F03803 		and	r3, r3, #56
 341:Core/Src/system_stm32h7xx.c ****   uint32_t pllp, pllsource, pllm, pllfracen, hsivalue, tmp;
 221              		.loc 1 341 1 view .LVU78
 222 0008 30B4     		push	{r4, r5}
 223              	.LCFI2:
 224              		.cfi_def_cfa_offset 8
 225              		.cfi_offset 4, -8
 226              		.cfi_offset 5, -4
 227              		.loc 1 349 3 view .LVU79
 228 000a 182B     		cmp	r3, #24
 229 000c 0ED8     		bhi	.L13
 230 000e DFE803F0 		tbb	[pc, r3]
 231              	.L15:
 232 0012 0D       		.byte	(.L13-.L15)/2
 233 0013 0D       		.byte	(.L13-.L15)/2
 234 0014 0D       		.byte	(.L13-.L15)/2
 235 0015 0D       		.byte	(.L13-.L15)/2
 236 0016 0D       		.byte	(.L13-.L15)/2
 237 0017 0D       		.byte	(.L13-.L15)/2
 238 0018 0D       		.byte	(.L13-.L15)/2
 239 0019 0D       		.byte	(.L13-.L15)/2
 240 001a 74       		.byte	(.L23-.L15)/2
 241 001b 0D       		.byte	(.L13-.L15)/2
 242 001c 0D       		.byte	(.L13-.L15)/2
 243 001d 0D       		.byte	(.L13-.L15)/2
 244 001e 0D       		.byte	(.L13-.L15)/2
 245 001f 0D       		.byte	(.L13-.L15)/2
 246 0020 0D       		.byte	(.L13-.L15)/2
 247 0021 0D       		.byte	(.L13-.L15)/2
 248 0022 76       		.byte	(.L16-.L15)/2
 249 0023 0D       		.byte	(.L13-.L15)/2
 250 0024 0D       		.byte	(.L13-.L15)/2
 251 0025 0D       		.byte	(.L13-.L15)/2
 252 0026 0D       		.byte	(.L13-.L15)/2
 253 0027 0D       		.byte	(.L13-.L15)/2
 254 0028 0D       		.byte	(.L13-.L15)/2
 255 0029 0D       		.byte	(.L13-.L15)/2
ARM GAS  /tmp/ccr9e1AX.s 			page 12


 256 002a 2A       		.byte	(.L14-.L15)/2
 257 002b 00       		.p2align 1
 258              	.L13:
 350:Core/Src/system_stm32h7xx.c ****   {
 351:Core/Src/system_stm32h7xx.c ****   case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
 352:Core/Src/system_stm32h7xx.c ****     common_system_clock = (uint32_t) (HSI_VALUE >> ((RCC->CR & RCC_CR_HSIDIV)>> 3));
 353:Core/Src/system_stm32h7xx.c ****     break;
 354:Core/Src/system_stm32h7xx.c **** 
 355:Core/Src/system_stm32h7xx.c ****   case RCC_CFGR_SWS_CSI:  /* CSI used as system clock  source */
 356:Core/Src/system_stm32h7xx.c ****     common_system_clock = CSI_VALUE;
 357:Core/Src/system_stm32h7xx.c ****     break;
 358:Core/Src/system_stm32h7xx.c **** 
 359:Core/Src/system_stm32h7xx.c ****   case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
 360:Core/Src/system_stm32h7xx.c ****     common_system_clock = HSE_VALUE;
 361:Core/Src/system_stm32h7xx.c ****     break;
 362:Core/Src/system_stm32h7xx.c **** 
 363:Core/Src/system_stm32h7xx.c ****   case RCC_CFGR_SWS_PLL1:  /* PLL1 used as system clock  source */
 364:Core/Src/system_stm32h7xx.c **** 
 365:Core/Src/system_stm32h7xx.c ****     /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLLM) * PLLN
 366:Core/Src/system_stm32h7xx.c ****     SYSCLK = PLL_VCO / PLLR
 367:Core/Src/system_stm32h7xx.c ****     */
 368:Core/Src/system_stm32h7xx.c ****     pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
 369:Core/Src/system_stm32h7xx.c ****     pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1)>> 4)  ;
 370:Core/Src/system_stm32h7xx.c ****     pllfracen = ((RCC->PLLCFGR & RCC_PLLCFGR_PLL1FRACEN)>>RCC_PLLCFGR_PLL1FRACEN_Pos);
 371:Core/Src/system_stm32h7xx.c ****     fracn1 = (float_t)(uint32_t)(pllfracen* ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1)>> 3));
 372:Core/Src/system_stm32h7xx.c **** 
 373:Core/Src/system_stm32h7xx.c ****     if (pllm != 0U)
 374:Core/Src/system_stm32h7xx.c ****     {
 375:Core/Src/system_stm32h7xx.c ****       switch (pllsource)
 376:Core/Src/system_stm32h7xx.c ****       {
 377:Core/Src/system_stm32h7xx.c ****         case RCC_PLLCKSELR_PLLSRC_HSI:  /* HSI used as PLL clock source */
 378:Core/Src/system_stm32h7xx.c **** 
 379:Core/Src/system_stm32h7xx.c ****         hsivalue = (HSI_VALUE >> ((RCC->CR & RCC_CR_HSIDIV)>> 3)) ;
 380:Core/Src/system_stm32h7xx.c ****         pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PL
 381:Core/Src/system_stm32h7xx.c **** 
 382:Core/Src/system_stm32h7xx.c ****         break;
 383:Core/Src/system_stm32h7xx.c **** 
 384:Core/Src/system_stm32h7xx.c ****         case RCC_PLLCKSELR_PLLSRC_CSI:  /* CSI used as PLL clock source */
 385:Core/Src/system_stm32h7xx.c ****           pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_
 386:Core/Src/system_stm32h7xx.c ****         break;
 387:Core/Src/system_stm32h7xx.c **** 
 388:Core/Src/system_stm32h7xx.c ****         case RCC_PLLCKSELR_PLLSRC_HSE:  /* HSE used as PLL clock source */
 389:Core/Src/system_stm32h7xx.c ****           pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_
 390:Core/Src/system_stm32h7xx.c ****         break;
 391:Core/Src/system_stm32h7xx.c **** 
 392:Core/Src/system_stm32h7xx.c ****       default:
 393:Core/Src/system_stm32h7xx.c ****           hsivalue = (HSI_VALUE >> ((RCC->CR & RCC_CR_HSIDIV)>> 3)) ;
 394:Core/Src/system_stm32h7xx.c ****           pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_P
 395:Core/Src/system_stm32h7xx.c ****         break;
 396:Core/Src/system_stm32h7xx.c ****       }
 397:Core/Src/system_stm32h7xx.c ****       pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >>9) + 1U ) ;
 398:Core/Src/system_stm32h7xx.c ****       common_system_clock =  (uint32_t)(float_t)(pllvco/(float_t)pllp);
 399:Core/Src/system_stm32h7xx.c ****     }
 400:Core/Src/system_stm32h7xx.c ****     else
 401:Core/Src/system_stm32h7xx.c ****     {
 402:Core/Src/system_stm32h7xx.c ****       common_system_clock = 0U;
 403:Core/Src/system_stm32h7xx.c ****     }
ARM GAS  /tmp/ccr9e1AX.s 			page 13


 404:Core/Src/system_stm32h7xx.c ****     break;
 405:Core/Src/system_stm32h7xx.c **** 
 406:Core/Src/system_stm32h7xx.c ****   default:
 407:Core/Src/system_stm32h7xx.c ****     common_system_clock = (uint32_t) (HSI_VALUE >> ((RCC->CR & RCC_CR_HSIDIV)>> 3));
 259              		.loc 1 407 5 is_stmt 1 view .LVU80
 260              		.loc 1 407 57 is_stmt 0 view .LVU81
 261 002c 454B     		ldr	r3, .L29
 262              		.loc 1 407 25 view .LVU82
 263 002e 464A     		ldr	r2, .L29+4
 264              		.loc 1 407 57 view .LVU83
 265 0030 1B68     		ldr	r3, [r3]
 266              		.loc 1 407 78 view .LVU84
 267 0032 C3F3C103 		ubfx	r3, r3, #3, #2
 268              		.loc 1 407 25 view .LVU85
 269 0036 DA40     		lsrs	r2, r2, r3
 270              	.LVL0:
 408:Core/Src/system_stm32h7xx.c ****     break;
 271              		.loc 1 408 5 is_stmt 1 view .LVU86
 272              	.L17:
 409:Core/Src/system_stm32h7xx.c ****   }
 410:Core/Src/system_stm32h7xx.c **** 
 411:Core/Src/system_stm32h7xx.c ****   /* Compute SystemClock frequency --------------------------------------------------*/
 412:Core/Src/system_stm32h7xx.c **** #if defined (RCC_D1CFGR_D1CPRE)
 413:Core/Src/system_stm32h7xx.c ****   tmp = D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos];
 273              		.loc 1 413 3 view .LVU87
 274              		.loc 1 413 30 is_stmt 0 view .LVU88
 275 0038 424B     		ldr	r3, .L29
 276              		.loc 1 413 25 view .LVU89
 277 003a 4448     		ldr	r0, .L29+8
 278              		.loc 1 413 30 view .LVU90
 279 003c 9969     		ldr	r1, [r3, #24]
 280              	.LVL1:
 414:Core/Src/system_stm32h7xx.c **** 
 415:Core/Src/system_stm32h7xx.c ****   /* common_system_clock frequency : CM7 CPU frequency  */
 416:Core/Src/system_stm32h7xx.c ****   common_system_clock >>= tmp;
 281              		.loc 1 416 3 is_stmt 1 view .LVU91
 417:Core/Src/system_stm32h7xx.c **** 
 418:Core/Src/system_stm32h7xx.c ****   /* SystemD2Clock frequency : CM4 CPU, AXI and AHBs Clock frequency  */
 419:Core/Src/system_stm32h7xx.c ****   SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_
 282              		.loc 1 419 66 is_stmt 0 view .LVU92
 283 003e 9B69     		ldr	r3, [r3, #24]
 413:Core/Src/system_stm32h7xx.c **** 
 284              		.loc 1 413 59 view .LVU93
 285 0040 C1F30321 		ubfx	r1, r1, #8, #4
 286              	.LVL2:
 287              		.loc 1 419 17 view .LVU94
 288 0044 424C     		ldr	r4, .L29+12
 289              		.loc 1 419 93 view .LVU95
 290 0046 03F00F03 		and	r3, r3, #15
 413:Core/Src/system_stm32h7xx.c **** 
 291              		.loc 1 413 7 view .LVU96
 292 004a 10F801C0 		ldrb	ip, [r0, r1]	@ zero_extendqisi2
 293              		.loc 1 419 118 view .LVU97
 294 004e C35C     		ldrb	r3, [r0, r3]	@ zero_extendqisi2
 416:Core/Src/system_stm32h7xx.c **** 
 295              		.loc 1 416 23 view .LVU98
 296 0050 22FA0CF2 		lsr	r2, r2, ip
ARM GAS  /tmp/ccr9e1AX.s 			page 14


 297              	.LVL3:
 298              		.loc 1 419 3 is_stmt 1 view .LVU99
 420:Core/Src/system_stm32h7xx.c **** 
 421:Core/Src/system_stm32h7xx.c **** #else
 422:Core/Src/system_stm32h7xx.c ****   tmp = D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE)>> RCC_CDCFGR1_CDCPRE_Pos];
 423:Core/Src/system_stm32h7xx.c **** 
 424:Core/Src/system_stm32h7xx.c ****   /* common_system_clock frequency : CM7 CPU frequency  */
 425:Core/Src/system_stm32h7xx.c ****   common_system_clock >>= tmp;
 426:Core/Src/system_stm32h7xx.c **** 
 427:Core/Src/system_stm32h7xx.c ****   /* SystemD2Clock frequency : AXI and AHBs Clock frequency  */
 428:Core/Src/system_stm32h7xx.c ****   SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_HPRE)>> RC
 429:Core/Src/system_stm32h7xx.c **** 
 430:Core/Src/system_stm32h7xx.c **** #endif
 431:Core/Src/system_stm32h7xx.c **** 
 432:Core/Src/system_stm32h7xx.c **** #if defined(DUAL_CORE) && defined(CORE_CM4)
 433:Core/Src/system_stm32h7xx.c ****   SystemCoreClock = SystemD2Clock;
 434:Core/Src/system_stm32h7xx.c **** #else
 435:Core/Src/system_stm32h7xx.c ****   SystemCoreClock = common_system_clock;
 299              		.loc 1 435 19 is_stmt 0 view .LVU100
 300 0054 3F49     		ldr	r1, .L29+16
 419:Core/Src/system_stm32h7xx.c **** 
 301              		.loc 1 419 118 view .LVU101
 302 0056 03F01F03 		and	r3, r3, #31
 303              		.loc 1 435 19 view .LVU102
 304 005a 0A60     		str	r2, [r1]
 419:Core/Src/system_stm32h7xx.c **** 
 305              		.loc 1 419 40 view .LVU103
 306 005c 22FA03F3 		lsr	r3, r2, r3
 419:Core/Src/system_stm32h7xx.c **** 
 307              		.loc 1 419 17 view .LVU104
 308 0060 2360     		str	r3, [r4]
 309              		.loc 1 435 3 is_stmt 1 view .LVU105
 436:Core/Src/system_stm32h7xx.c **** #endif /* DUAL_CORE && CORE_CM4 */
 437:Core/Src/system_stm32h7xx.c **** }
 310              		.loc 1 437 1 is_stmt 0 view .LVU106
 311 0062 30BC     		pop	{r4, r5}
 312              	.LCFI3:
 313              		.cfi_remember_state
 314              		.cfi_restore 5
 315              		.cfi_restore 4
 316              		.cfi_def_cfa_offset 0
 317 0064 7047     		bx	lr
 318              	.LVL4:
 319              	.L14:
 320              	.LCFI4:
 321              		.cfi_restore_state
 368:Core/Src/system_stm32h7xx.c ****     pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1)>> 4)  ;
 322              		.loc 1 368 5 is_stmt 1 view .LVU107
 368:Core/Src/system_stm32h7xx.c ****     pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1)>> 4)  ;
 323              		.loc 1 368 21 is_stmt 0 view .LVU108
 324 0066 374B     		ldr	r3, .L29
 325 0068 996A     		ldr	r1, [r3, #40]
 326              	.LVL5:
 369:Core/Src/system_stm32h7xx.c ****     pllfracen = ((RCC->PLLCFGR & RCC_PLLCFGR_PLL1FRACEN)>>RCC_PLLCFGR_PLL1FRACEN_Pos);
 327              		.loc 1 369 5 is_stmt 1 view .LVU109
 369:Core/Src/system_stm32h7xx.c ****     pllfracen = ((RCC->PLLCFGR & RCC_PLLCFGR_PLL1FRACEN)>>RCC_PLLCFGR_PLL1FRACEN_Pos);
 328              		.loc 1 369 17 is_stmt 0 view .LVU110
ARM GAS  /tmp/ccr9e1AX.s 			page 15


 329 006a 9C6A     		ldr	r4, [r3, #40]
 370:Core/Src/system_stm32h7xx.c ****     fracn1 = (float_t)(uint32_t)(pllfracen* ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1)>> 3));
 330              		.loc 1 370 22 view .LVU111
 331 006c DD6A     		ldr	r5, [r3, #44]
 373:Core/Src/system_stm32h7xx.c ****     {
 332              		.loc 1 373 8 view .LVU112
 333 006e 14F47C7F 		tst	r4, #1008
 371:Core/Src/system_stm32h7xx.c **** 
 334              		.loc 1 371 50 view .LVU113
 335 0072 586B     		ldr	r0, [r3, #52]
 369:Core/Src/system_stm32h7xx.c ****     pllfracen = ((RCC->PLLCFGR & RCC_PLLCFGR_PLL1FRACEN)>>RCC_PLLCFGR_PLL1FRACEN_Pos);
 336              		.loc 1 369 10 view .LVU114
 337 0074 C4F30512 		ubfx	r2, r4, #4, #6
 338              	.LVL6:
 370:Core/Src/system_stm32h7xx.c ****     fracn1 = (float_t)(uint32_t)(pllfracen* ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1)>> 3));
 339              		.loc 1 370 5 is_stmt 1 view .LVU115
 371:Core/Src/system_stm32h7xx.c **** 
 340              		.loc 1 371 5 view .LVU116
 373:Core/Src/system_stm32h7xx.c ****     {
 341              		.loc 1 373 5 view .LVU117
 373:Core/Src/system_stm32h7xx.c ****     {
 342              		.loc 1 373 8 is_stmt 0 view .LVU118
 343 0078 DED0     		beq	.L17
 371:Core/Src/system_stm32h7xx.c **** 
 344              		.loc 1 371 85 view .LVU119
 345 007a C0F3CC00 		ubfx	r0, r0, #3, #13
 346              	.LVL7:
 370:Core/Src/system_stm32h7xx.c ****     fracn1 = (float_t)(uint32_t)(pllfracen* ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1)>> 3));
 347              		.loc 1 370 15 view .LVU120
 348 007e 05F00105 		and	r5, r5, #1
 349              	.LVL8:
 368:Core/Src/system_stm32h7xx.c ****     pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1)>> 4)  ;
 350              		.loc 1 368 15 view .LVU121
 351 0082 01F00301 		and	r1, r1, #3
 352              	.LVL9:
 371:Core/Src/system_stm32h7xx.c **** 
 353              		.loc 1 371 23 view .LVU122
 354 0086 05FB00F0 		mul	r0, r5, r0
 355 008a 0129     		cmp	r1, #1
 371:Core/Src/system_stm32h7xx.c **** 
 356              		.loc 1 371 12 view .LVU123
 357 008c 07EE900A 		vmov	s15, r0	@ int
 358 0090 F8EEE77A 		vcvt.f32.s32	s15, s15
 375:Core/Src/system_stm32h7xx.c ****       {
 359              		.loc 1 375 7 is_stmt 1 view .LVU124
 360 0094 4FD0     		beq	.L19
 361 0096 0229     		cmp	r1, #2
 362 0098 33D0     		beq	.L20
 393:Core/Src/system_stm32h7xx.c ****           pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_P
 363              		.loc 1 393 11 view .LVU125
 393:Core/Src/system_stm32h7xx.c ****           pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_P
 364              		.loc 1 393 41 is_stmt 0 view .LVU126
 365 009a 1868     		ldr	r0, [r3]
 366              	.LVL10:
 394:Core/Src/system_stm32h7xx.c ****         break;
 367              		.loc 1 394 11 is_stmt 1 view .LVU127
 394:Core/Src/system_stm32h7xx.c ****         break;
ARM GAS  /tmp/ccr9e1AX.s 			page 16


 368              		.loc 1 394 41 is_stmt 0 view .LVU128
 369 009c 07EE102A 		vmov	s14, r2	@ int
 393:Core/Src/system_stm32h7xx.c ****           pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_P
 370              		.loc 1 393 20 view .LVU129
 371 00a0 2949     		ldr	r1, .L29+4
 372              	.LVL11:
 394:Core/Src/system_stm32h7xx.c ****         break;
 373              		.loc 1 394 139 view .LVU130
 374 00a2 B7EE006A 		vmov.f32	s12, #1.0e+0
 394:Core/Src/system_stm32h7xx.c ****         break;
 375              		.loc 1 394 82 view .LVU131
 376 00a6 1B6B     		ldr	r3, [r3, #48]
 393:Core/Src/system_stm32h7xx.c ****           pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_P
 377              		.loc 1 393 62 view .LVU132
 378 00a8 C0F3C102 		ubfx	r2, r0, #3, #2
 379              	.LVL12:
 394:Core/Src/system_stm32h7xx.c ****         break;
 380              		.loc 1 394 41 view .LVU133
 381 00ac F8EEC75A 		vcvt.f32.s32	s11, s14
 394:Core/Src/system_stm32h7xx.c ****         break;
 382              		.loc 1 394 112 view .LVU134
 383 00b0 9FED295A 		vldr.32	s10, .L29+20
 394:Core/Src/system_stm32h7xx.c ****         break;
 384              		.loc 1 394 68 view .LVU135
 385 00b4 C3F30803 		ubfx	r3, r3, #0, #9
 393:Core/Src/system_stm32h7xx.c ****           pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_P
 386              		.loc 1 393 20 view .LVU136
 387 00b8 D140     		lsrs	r1, r1, r2
 394:Core/Src/system_stm32h7xx.c ****         break;
 388              		.loc 1 394 68 view .LVU137
 389 00ba 07EE103A 		vmov	s14, r3	@ int
 390              	.LVL13:
 394:Core/Src/system_stm32h7xx.c ****         break;
 391              		.loc 1 394 21 view .LVU138
 392 00be 06EE901A 		vmov	s13, r1	@ int
 394:Core/Src/system_stm32h7xx.c ****         break;
 393              		.loc 1 394 59 view .LVU139
 394 00c2 B8EEC77A 		vcvt.f32.s32	s14, s14
 394:Core/Src/system_stm32h7xx.c ****         break;
 395              		.loc 1 394 21 view .LVU140
 396 00c6 F8EEE66A 		vcvt.f32.s32	s13, s13
 394:Core/Src/system_stm32h7xx.c ****         break;
 397              		.loc 1 394 112 view .LVU141
 398 00ca A7EE857A 		vfma.f32	s14, s15, s10
 394:Core/Src/system_stm32h7xx.c ****         break;
 399              		.loc 1 394 39 view .LVU142
 400 00ce C6EEA57A 		vdiv.f32	s15, s13, s11
 394:Core/Src/system_stm32h7xx.c ****         break;
 401              		.loc 1 394 139 view .LVU143
 402 00d2 37EE067A 		vadd.f32	s14, s14, s12
 394:Core/Src/system_stm32h7xx.c ****         break;
 403              		.loc 1 394 18 view .LVU144
 404 00d6 27EE277A 		vmul.f32	s14, s14, s15
 405              	.LVL14:
 395:Core/Src/system_stm32h7xx.c ****       }
 406              		.loc 1 395 9 is_stmt 1 view .LVU145
 407              	.L22:
ARM GAS  /tmp/ccr9e1AX.s 			page 17


 397:Core/Src/system_stm32h7xx.c ****       common_system_clock =  (uint32_t)(float_t)(pllvco/(float_t)pllp);
 408              		.loc 1 397 7 view .LVU146
 397:Core/Src/system_stm32h7xx.c ****       common_system_clock =  (uint32_t)(float_t)(pllvco/(float_t)pllp);
 409              		.loc 1 397 20 is_stmt 0 view .LVU147
 410 00da 1A4B     		ldr	r3, .L29
 411 00dc 1B6B     		ldr	r3, [r3, #48]
 412              	.LVL15:
 398:Core/Src/system_stm32h7xx.c ****     }
 413              		.loc 1 398 7 is_stmt 1 view .LVU148
 397:Core/Src/system_stm32h7xx.c ****       common_system_clock =  (uint32_t)(float_t)(pllvco/(float_t)pllp);
 414              		.loc 1 397 50 is_stmt 0 view .LVU149
 415 00de C3F34623 		ubfx	r3, r3, #9, #7
 416              	.LVL16:
 397:Core/Src/system_stm32h7xx.c ****       common_system_clock =  (uint32_t)(float_t)(pllvco/(float_t)pllp);
 417              		.loc 1 397 12 view .LVU150
 418 00e2 0133     		adds	r3, r3, #1
 398:Core/Src/system_stm32h7xx.c ****     }
 419              		.loc 1 398 57 view .LVU151
 420 00e4 07EE903A 		vmov	s15, r3	@ int
 421 00e8 F8EEE77A 		vcvt.f32.s32	s15, s15
 398:Core/Src/system_stm32h7xx.c ****     }
 422              		.loc 1 398 40 view .LVU152
 423 00ec C7EE276A 		vdiv.f32	s13, s14, s15
 398:Core/Src/system_stm32h7xx.c ****     }
 424              		.loc 1 398 27 view .LVU153
 425 00f0 FCEEE67A 		vcvt.u32.f32	s15, s13
 426 00f4 17EE902A 		vmov	r2, s15	@ int
 427              	.LVL17:
 398:Core/Src/system_stm32h7xx.c ****     }
 428              		.loc 1 398 27 view .LVU154
 429 00f8 9EE7     		b	.L17
 430              	.LVL18:
 431              	.L23:
 356:Core/Src/system_stm32h7xx.c ****     break;
 432              		.loc 1 356 25 view .LVU155
 433 00fa 184A     		ldr	r2, .L29+24
 434 00fc 9CE7     		b	.L17
 435              	.L16:
 349:Core/Src/system_stm32h7xx.c ****   {
 436              		.loc 1 349 3 view .LVU156
 437 00fe 184A     		ldr	r2, .L29+28
 438 0100 9AE7     		b	.L17
 439              	.LVL19:
 440              	.L20:
 389:Core/Src/system_stm32h7xx.c ****         break;
 441              		.loc 1 389 11 is_stmt 1 view .LVU157
 389:Core/Src/system_stm32h7xx.c ****         break;
 442              		.loc 1 389 42 is_stmt 0 view .LVU158
 443 0102 07EE102A 		vmov	s14, r2	@ int
 389:Core/Src/system_stm32h7xx.c ****         break;
 444              		.loc 1 389 40 view .LVU159
 445 0106 9FED175A 		vldr.32	s10, .L29+32
 389:Core/Src/system_stm32h7xx.c ****         break;
 446              		.loc 1 389 42 view .LVU160
 447 010a F8EEC76A 		vcvt.f32.s32	s13, s14
 448              	.L28:
 389:Core/Src/system_stm32h7xx.c ****         break;
ARM GAS  /tmp/ccr9e1AX.s 			page 18


 449              		.loc 1 389 83 view .LVU161
 450 010e 1B6B     		ldr	r3, [r3, #48]
 389:Core/Src/system_stm32h7xx.c ****         break;
 451              		.loc 1 389 40 view .LVU162
 452 0110 85EE267A 		vdiv.f32	s14, s10, s13
 389:Core/Src/system_stm32h7xx.c ****         break;
 453              		.loc 1 389 113 view .LVU163
 454 0114 DFED105A 		vldr.32	s11, .L29+20
 389:Core/Src/system_stm32h7xx.c ****         break;
 455              		.loc 1 389 69 view .LVU164
 456 0118 C3F30803 		ubfx	r3, r3, #0, #9
 457 011c 06EE903A 		vmov	s13, r3	@ int
 389:Core/Src/system_stm32h7xx.c ****         break;
 458              		.loc 1 389 140 view .LVU165
 459 0120 B7EE006A 		vmov.f32	s12, #1.0e+0
 389:Core/Src/system_stm32h7xx.c ****         break;
 460              		.loc 1 389 60 view .LVU166
 461 0124 F8EEE66A 		vcvt.f32.s32	s13, s13
 389:Core/Src/system_stm32h7xx.c ****         break;
 462              		.loc 1 389 113 view .LVU167
 463 0128 E7EEA56A 		vfma.f32	s13, s15, s11
 389:Core/Src/system_stm32h7xx.c ****         break;
 464              		.loc 1 389 140 view .LVU168
 465 012c 76EE867A 		vadd.f32	s15, s13, s12
 389:Core/Src/system_stm32h7xx.c ****         break;
 466              		.loc 1 389 18 view .LVU169
 467 0130 27EE277A 		vmul.f32	s14, s14, s15
 468              	.LVL20:
 390:Core/Src/system_stm32h7xx.c **** 
 469              		.loc 1 390 9 is_stmt 1 view .LVU170
 470 0134 D1E7     		b	.L22
 471              	.LVL21:
 472              	.L19:
 385:Core/Src/system_stm32h7xx.c ****         break;
 473              		.loc 1 385 11 view .LVU171
 385:Core/Src/system_stm32h7xx.c ****         break;
 474              		.loc 1 385 42 is_stmt 0 view .LVU172
 475 0136 07EE102A 		vmov	s14, r2	@ int
 385:Core/Src/system_stm32h7xx.c ****         break;
 476              		.loc 1 385 40 view .LVU173
 477 013a 9FED0B5A 		vldr.32	s10, .L29+36
 385:Core/Src/system_stm32h7xx.c ****         break;
 478              		.loc 1 385 42 view .LVU174
 479 013e F8EEC76A 		vcvt.f32.s32	s13, s14
 480 0142 E4E7     		b	.L28
 481              	.L30:
 482              		.align	2
 483              	.L29:
 484 0144 00440258 		.word	1476543488
 485 0148 0090D003 		.word	64000000
 486 014c 00000000 		.word	.LANCHOR0
 487 0150 00000000 		.word	.LANCHOR1
 488 0154 00000000 		.word	.LANCHOR2
 489 0158 00000039 		.word	956301312
 490 015c 00093D00 		.word	4000000
 491 0160 40787D01 		.word	25000000
 492 0164 20BCBE4B 		.word	1270791200
ARM GAS  /tmp/ccr9e1AX.s 			page 19


 493 0168 0024744A 		.word	1249125376
 494              		.cfi_endproc
 495              	.LFE145:
 497              		.global	D1CorePrescTable
 498              		.global	SystemD2Clock
 499              		.global	SystemCoreClock
 500              		.section	.data.SystemCoreClock,"aw"
 501              		.align	2
 502              		.set	.LANCHOR2,. + 0
 505              	SystemCoreClock:
 506 0000 0090D003 		.word	64000000
 507              		.section	.data.SystemD2Clock,"aw"
 508              		.align	2
 509              		.set	.LANCHOR1,. + 0
 512              	SystemD2Clock:
 513 0000 0090D003 		.word	64000000
 514              		.section	.rodata.D1CorePrescTable,"a"
 515              		.align	2
 516              		.set	.LANCHOR0,. + 0
 519              	D1CorePrescTable:
 520 0000 00000000 		.ascii	"\000\000\000\000\001\002\003\004\001\002\003\004\006"
 520      01020304 
 520      01020304 
 520      06
 521 000d 070809   		.ascii	"\007\010\011"
 522              		.text
 523              	.Letext0:
 524              		.file 2 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 525              		.file 3 "Drivers/CMSIS/Include/core_cm7.h"
 526              		.file 4 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 527              		.file 5 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 528              		.file 6 "/usr/include/newlib/math.h"
ARM GAS  /tmp/ccr9e1AX.s 			page 20


DEFINED SYMBOLS
                            *ABS*:0000000000000000 system_stm32h7xx.c
     /tmp/ccr9e1AX.s:17     .text.SystemInit:0000000000000000 $t
     /tmp/ccr9e1AX.s:26     .text.SystemInit:0000000000000000 SystemInit
     /tmp/ccr9e1AX.s:182    .text.SystemInit:00000000000000a0 $d
     /tmp/ccr9e1AX.s:197    .text.SystemCoreClockUpdate:0000000000000000 $t
     /tmp/ccr9e1AX.s:205    .text.SystemCoreClockUpdate:0000000000000000 SystemCoreClockUpdate
     /tmp/ccr9e1AX.s:232    .text.SystemCoreClockUpdate:0000000000000012 $d
     /tmp/ccr9e1AX.s:484    .text.SystemCoreClockUpdate:0000000000000144 $d
     /tmp/ccr9e1AX.s:519    .rodata.D1CorePrescTable:0000000000000000 D1CorePrescTable
     /tmp/ccr9e1AX.s:512    .data.SystemD2Clock:0000000000000000 SystemD2Clock
     /tmp/ccr9e1AX.s:505    .data.SystemCoreClock:0000000000000000 SystemCoreClock
     /tmp/ccr9e1AX.s:501    .data.SystemCoreClock:0000000000000000 $d
     /tmp/ccr9e1AX.s:508    .data.SystemD2Clock:0000000000000000 $d
     /tmp/ccr9e1AX.s:515    .rodata.D1CorePrescTable:0000000000000000 $d
     /tmp/ccr9e1AX.s:257    .text.SystemCoreClockUpdate:000000000000002b $d
     /tmp/ccr9e1AX.s:257    .text.SystemCoreClockUpdate:000000000000002c $t

NO UNDEFINED SYMBOLS
